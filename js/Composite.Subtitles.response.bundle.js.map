{"version":3,"file":"Composite.Subtitles.response.bundle.js","sources":["webpack://universal/./src/WebVTT/WebVTT.mjs","webpack://universal/./src/XML/XML.mjs","webpack://universal/./src/class/Composite.mjs","webpack://universal/./src/database/index.mjs","webpack://universal/./src/function/constructSubtitlesQueue.mjs","webpack://universal/./src/function/detectFormat.mjs","webpack://universal/./src/function/detectPlatform.mjs","webpack://universal/./src/function/setCache.mjs","webpack://universal/./src/function/setENV.mjs","webpack://universal/./src/utils/Lodash.mjs","webpack://universal/./src/utils/Storage.mjs","webpack://universal/./src/utils/URL.mjs","webpack://universal/./src/utils/done.mjs","webpack://universal/./src/utils/fetch.mjs","webpack://universal/./src/utils/getStorage.mjs","webpack://universal/./src/utils/initGotEnv.mjs","webpack://universal/./src/utils/logError.mjs","webpack://universal/./src/utils/notification.mjs","webpack://universal/./src/utils/platform.mjs","webpack://universal/./src/utils/runScript.mjs","webpack://universal/./src/utils/utils.mjs","webpack://universal/./src/Composite.Subtitles.response.js"],"sourcesContent":["// refer: https://www.w3.org/TR/webvtt1/\r\nexport default class WebVTT {\r\n\tstatic name = \"WebVTT\";\r\n\tstatic version = \"2.2.0\";\r\n\tstatic about = () => console.log(`\\n🟧 ${this.name} v${this.version}\\n`);\r\n\r\n\tstatic parse(vtt = new String, options = { milliseconds: true, timeStamp: true, line: \"single\", lineBreak: \"\\n\" }) {\r\n\t\tconst WebVTTCueRegex = (options.milliseconds) ? /^((?<index>\\d+)(\\r\\n|\\r|\\n))?(?<timing>(?<startTime>[0-9:.,]+) --> (?<endTime>[0-9:.,]+)) ?(?<settings>.+)?[^](?<text>[\\s\\S]*)?$/\r\n\t\t\t: /^((?<index>\\d+)(\\r\\n|\\r|\\n))?(?<timing>(?<startTime>[0-9:]+)[0-9.,]+ --> (?<endTime>[0-9:]+)[0-9.,]+) ?(?<settings>.+)?[^](?<text>[\\s\\S]*)?$/\r\n\t\tconst Array = vtt.split(/\\r\\n\\r\\n|\\r\\r|\\n\\n/);\r\n\t\tconst Json = { headers: {}, comments: [], style: \"\", body: [] };\r\n\r\n\t\tArray.forEach(item => {\r\n\t\t\titem = item.trim();\r\n\t\t\tswitch (item.substring(0, 5).trim()) {\r\n\t\t\t\tcase \"WEBVT\": {\r\n\t\t\t\t\tlet cues = item.split(/\\r\\n|\\r|\\n/);\r\n\t\t\t\t\tJson.headers.type = cues.shift();\r\n\t\t\t\t\tJson.headers.options = cues;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t\tcase \"NOTE\": {\r\n\t\t\t\t\tJson.comments.push(item);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t\tcase \"STYLE\": {\r\n\t\t\t\t\tlet cues = item.split(/\\r\\n|\\r|\\n/);\r\n\t\t\t\t\tcues.shift();\r\n\t\t\t\t\tJson.style = cues.join(options.lineBreak);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet cue = item.match(WebVTTCueRegex)?.groups;\r\n\t\t\t\t\tif (cue) {\r\n\t\t\t\t\t\tif (Json.headers?.type !== \"WEBVTT\") {\r\n\t\t\t\t\t\t\tcue.timing = cue?.timing?.replace?.(\",\", \".\");\r\n\t\t\t\t\t\t\tcue.startTime = cue?.startTime?.replace?.(\",\", \".\");\r\n\t\t\t\t\t\t\tcue.endTime = cue?.endTime?.replace?.(\",\", \".\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (options.timeStamp) {\r\n\t\t\t\t\t\t\tlet ISOString = cue?.startTime?.replace?.(/(.*)/, \"1970-01-01T$1Z\")\r\n\t\t\t\t\t\t\tcue.timeStamp = (options.milliseconds) ? Date.parse(ISOString) : Date.parse(ISOString) / 1000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcue.text = cue?.text?.trimEnd?.();\r\n\t\t\t\t\t\tswitch (options.line) {\r\n\t\t\t\t\t\t\tcase \"single\":\r\n\t\t\t\t\t\t\t\tcue.text = cue?.text?.replace?.(/\\r\\n|\\r|\\n/, \" \");\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"multi\":\r\n\t\t\t\t\t\t\t\tcue.text = cue?.text?.split?.(/\\r\\n|\\r|\\n/);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tJson.body.push(cue);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn Json;\r\n\t};\r\n\r\n\tstatic stringify(json = { headers: {}, comments: [], style: \"\", body: [] }, options = { milliseconds: true, timeStamp: true, line: \"single\", lineBreak: \"\\n\" }) {\r\n\t\tlet vtt = [\r\n\t\t\tjson.headers = [json.headers?.type || \"\", json.headers?.options || \"\"].flat(Infinity).join(options.lineBreak),\r\n\t\t\tjson.comments = json?.comments?.join?.(options.lineBreak),\r\n\t\t\tjson.style = (json?.style?.length > 0) ? [\"STYLE\", json.style].join(options.lineBreak) : \"\",\r\n\t\t\tjson.body = json.body.map(item => {\r\n\t\t\t\tif (Array.isArray(item.text)) item.text = item.text.join(options.lineBreak);\r\n\t\t\t\titem = `${(item.index) ? item.index + options.lineBreak : \"\"}${item.timing} ${item?.settings ?? \"\"}${options.lineBreak}${item.text}`;\r\n\t\t\t\treturn item;\r\n\t\t\t}).join(options.lineBreak + options.lineBreak)\r\n\t\t].join(options.lineBreak + options.lineBreak).trim() + options.lineBreak + options.lineBreak;\r\n\t\treturn vtt;\r\n\t};\r\n};\r\n","// refer: https://github.com/Peng-YM/QuanX/blob/master/Tools/XMLParser/xml-parser.js\r\n// refer: https://goessner.net/download/prj/jsonxml/\r\nexport default class XML {\r\n\tstatic name = \"XML\";\r\n\tstatic version = \"0.4.2\";\r\n\tstatic about = () => console.log(`\\n🟧 ${this.name} v${this.version}\\n`);\r\n\t\r\n\tstatic #ATTRIBUTE_KEY = \"@\";\r\n\tstatic #CHILD_NODE_KEY = \"#\";\r\n\tstatic #UNESCAPE = {\r\n\t\t\"&amp;\": \"&\",\r\n\t\t\"&lt;\": \"<\",\r\n\t\t\"&gt;\": \">\",\r\n\t\t\"&apos;\": \"'\",\r\n\t\t\"&quot;\": '\"'\r\n\t};\r\n\tstatic #ESCAPE = {\r\n\t\t\"&\": \"&amp;\",\r\n\t\t\"<\": \"&lt;\",\r\n\t\t\">\": \"&gt;\",\r\n\t\t\"'\": \"&apos;\",\r\n\t\t'\"': \"&quot;\"\r\n\t};\r\n\r\n\tstatic parse(xml = new String, reviver = \"\") {\r\n\t\tconst UNESCAPE = this.#UNESCAPE;\r\n\t\tconst ATTRIBUTE_KEY = this.#ATTRIBUTE_KEY;\r\n\t\tconst CHILD_NODE_KEY = this.#CHILD_NODE_KEY;\r\n\t\tconst DOM = toDOM(xml);\r\n\t\tlet json = fromXML(DOM, reviver);\r\n\t\treturn json;\r\n\r\n\t\t/***************** Fuctions *****************/\r\n\t\tfunction toDOM(text) {\r\n\t\t\tconst list = text.replace(/^[ \\t]+/gm, \"\")\r\n\t\t\t\t.split(/<([^!<>?](?:'[\\S\\s]*?'|\"[\\S\\s]*?\"|[^'\"<>])*|!(?:--[\\S\\s]*?--|\\[[^\\[\\]'\"<>]+\\[[\\S\\s]*?]]|DOCTYPE[^\\[<>]*?\\[[\\S\\s]*?]|(?:ENTITY[^\"<>]*?\"[\\S\\s]*?\")?[\\S\\s]*?)|\\?[\\S\\s]*?\\?)>/);\r\n\t\t\tconst length = list.length;\r\n\r\n\t\t\t// root element\r\n\t\t\tconst root = { children: [] };\r\n\t\t\tlet elem = root;\r\n\r\n\t\t\t// dom tree stack\r\n\t\t\tconst stack = [];\r\n\r\n\t\t\t// parse\r\n\t\t\tfor (let i = 0; i < length;) {\r\n\t\t\t\t// text node\r\n\t\t\t\tconst str = list[i++];\r\n\t\t\t\tif (str) appendText(str);\r\n\r\n\t\t\t\t// child node\r\n\t\t\t\tconst tag = list[i++];\r\n\t\t\t\tif (tag) parseNode(tag);\r\n\t\t\t}\r\n\t\t\treturn root;\r\n\t\t\t/***************** Fuctions *****************/\r\n\t\t\tfunction parseNode(tag) {\r\n\t\t\t\tconst tags = tag.split(\" \");\r\n\t\t\t\tconst name = tags.shift();\r\n\t\t\t\tconst length = tags.length;\r\n\t\t\t\tlet child = {};\r\n\t\t\t\tswitch (name[0]) {\r\n\t\t\t\t\tcase \"/\":\r\n\t\t\t\t\t\t// close tag\r\n\t\t\t\t\t\tconst closed = tag.replace(/^\\/|[\\s\\/].*$/g, \"\").toLowerCase();\r\n\t\t\t\t\t\twhile (stack.length) {\r\n\t\t\t\t\t\t\tconst tagName = elem?.name?.toLowerCase?.();\r\n\t\t\t\t\t\t\telem = stack.pop();\r\n\t\t\t\t\t\t\tif (tagName === closed) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"?\":\r\n\t\t\t\t\t\t// XML declaration\r\n\t\t\t\t\t\tchild.name = name;\r\n\t\t\t\t\t\tchild.raw = tags.join(\" \");\r\n\t\t\t\t\t\tappendChild(child);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"!\":\r\n\t\t\t\t\t\tif (/!\\[CDATA\\[(.+)\\]\\]/.test(tag)) {\r\n\t\t\t\t\t\t\t// CDATA section\r\n\t\t\t\t\t\t\tchild.name = \"!CDATA\";\r\n\t\t\t\t\t\t\t//child.raw = tag.slice(9, -2);\r\n\t\t\t\t\t\t\tchild.raw = tag.match(/!\\[CDATA\\[(?<raw>.+)\\]\\]/)?.groups?.raw;\r\n\t\t\t\t\t\t\t//appendText(tag.slice(9, -2));\r\n\t\t\t\t\t\t} else if (/!--(.+)--/.test(tag)) {\r\n\t\t\t\t\t\t\t// Comment section\r\n\t\t\t\t\t\t\tchild.name = \"!--\";\r\n\t\t\t\t\t\t\tchild.raw = tag.match(/!--(?<raw>.+)--/)?.groups?.raw;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Comment section\r\n\t\t\t\t\t\t\tchild.name = name;\r\n\t\t\t\t\t\t\tchild.raw = tags.join(\" \");\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tappendChild(child);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tchild = openTag(tag);\r\n\t\t\t\t\t\tappendChild(child);\r\n\t\t\t\t\t\tswitch ((tags?.[length - 1] ?? name).slice(-1)) {\r\n\t\t\t\t\t\t\tcase \"/\":\r\n\t\t\t\t\t\t\t\t//child.hasChild = false; // emptyTag\r\n\t\t\t\t\t\t\t\tdelete child.children; // emptyTag\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tswitch (name) {\r\n\t\t\t\t\t\t\t\t\tcase \"link\":\r\n\t\t\t\t\t\t\t\t\t\t//child.hasChild = false; // emptyTag\r\n\t\t\t\t\t\t\t\t\t\tdelete child.children; // emptyTag\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tstack.push(elem); // openTag\r\n\t\t\t\t\t\t\t\t\t\telem = child;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\r\n\t\t\t\tfunction openTag(tag) {\r\n\t\t\t\t\tconst elem = { children: [] };\r\n\t\t\t\t\ttag = tag.replace(/\\s*\\/?$/, \"\");\r\n\t\t\t\t\tconst pos = tag.search(/[\\s='\"\\/]/);\r\n\t\t\t\t\tif (pos < 0) {\r\n\t\t\t\t\t\telem.name = tag;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telem.name = tag.substr(0, pos);\r\n\t\t\t\t\t\telem.tag = tag.substr(pos);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn elem;\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t\tfunction appendText(str) {\r\n\t\t\t\t//str = removeSpaces(str);\r\n\t\t\t\tstr = removeBreakLine(str);\r\n\t\t\t\t//str = str?.trim?.();\r\n\t\t\t\tif (str) appendChild(unescapeXML(str));\r\n\r\n\t\t\t\tfunction removeBreakLine(str) {\r\n\t\t\t\t\treturn str?.replace?.(/^(\\r\\n|\\r|\\n|\\t)+|(\\r\\n|\\r|\\n|\\t)+$/g, \"\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction appendChild(child) {\r\n\t\t\t\telem.children.push(child);\r\n\t\t\t}\r\n\t\t};\r\n\t\t/***************** Fuctions *****************/\r\n\t\tfunction fromPlist(elem, reviver) {\r\n\t\t\tlet object;\r\n\t\t\tswitch (typeof elem) {\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tobject = elem;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\t//default:\r\n\t\t\t\t\tconst name = elem.name;\r\n\t\t\t\t\tconst children = elem.children;\r\n\r\n\t\t\t\t\tobject = {};\r\n\r\n\t\t\t\t\tswitch (name) {\r\n\t\t\t\t\t\tcase \"plist\":\r\n\t\t\t\t\t\t\tlet plist = fromPlist(children[0], reviver);\r\n\t\t\t\t\t\t\tobject = Object.assign(object, plist)\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"dict\":\r\n\t\t\t\t\t\t\tlet dict = children.map(child => fromPlist(child, reviver));\r\n\t\t\t\t\t\t\tdict = chunk(dict, 2);\r\n\t\t\t\t\t\t\tobject = Object.fromEntries(dict);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"array\":\r\n\t\t\t\t\t\t\tif (!Array.isArray(object)) object = [];\r\n\t\t\t\t\t\t\tobject = children.map(child => fromPlist(child, reviver));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"key\":\r\n\t\t\t\t\t\t\tconst key = children[0];\r\n\t\t\t\t\t\t\tobject = key;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"true\":\r\n\t\t\t\t\t\tcase \"false\":\r\n\t\t\t\t\t\t\tconst boolean = name;\r\n\t\t\t\t\t\t\tobject = JSON.parse(boolean);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"integer\":\r\n\t\t\t\t\t\t\tconst integer = children[0];\r\n\t\t\t\t\t\t\t//object = parseInt(integer);\r\n\t\t\t\t\t\t\tobject = BigInt(integer);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"real\":\r\n\t\t\t\t\t\t\tconst real = children[0];\r\n\t\t\t\t\t\t\t//const digits = real.split(\".\")[1]?.length || 0;\r\n\t\t\t\t\t\t\tobject = parseFloat(real)//.toFixed(digits);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"string\":\r\n\t\t\t\t\t\t\tconst string = children[0];\r\n\t\t\t\t\t\t\tobject = string;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (reviver) object = reviver(name || \"\", object);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn object;\r\n\r\n\t\t\t/** \r\n\t\t\t * Chunk Array\r\n\t\t\t * @author VirgilClyne\r\n\t\t\t * @param {Array} source - source\r\n\t\t\t * @param {Number} length - number\r\n\t\t\t * @return {Array<*>} target\r\n\t\t\t */\r\n\t\t\tfunction chunk(source, length) {\r\n\t\t\t\tvar index = 0, target = [];\r\n\t\t\t\twhile (index < source.length) target.push(source.slice(index, index += length));\r\n\t\t\t\treturn target;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction fromXML(elem, reviver) {\r\n\t\t\tlet object;\r\n\t\t\tswitch (typeof elem) {\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\tobject = elem;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\t//default:\r\n\t\t\t\t\tconst raw = elem.raw;\r\n\t\t\t\t\tconst name = elem.name;\r\n\t\t\t\t\tconst tag = elem.tag;\r\n\t\t\t\t\tconst children = elem.children;\r\n\r\n\t\t\t\t\tif (raw) object = raw;\r\n\t\t\t\t\telse if (tag) object = parseAttribute(tag, reviver);\r\n\t\t\t\t\telse if (!children) object = { [name]: undefined };\r\n\t\t\t\t\telse object = {};\r\n\r\n\t\t\t\t\tif (name === \"plist\") object = Object.assign(object, fromPlist(children[0], reviver));\r\n\t\t\t\t\telse children?.forEach?.((child, i) => {\r\n\t\t\t\t\t\tif (typeof child === \"string\") addObject(object, CHILD_NODE_KEY, fromXML(child, reviver), undefined)\r\n\t\t\t\t\t\telse if (!child.tag && !child.children && !child.raw) addObject(object, child.name, fromXML(child, reviver), children?.[i - 1]?.name)\r\n\t\t\t\t\t\telse addObject(object, child.name, fromXML(child, reviver), undefined)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (children && children.length === 0) addObject(object, CHILD_NODE_KEY, null, undefined);\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tif (Object.keys(object).length === 0) {\r\n\t\t\t\t\t\tif (elem.name) object[elem.name] = (elem.hasChild === false) ? null : \"\";\r\n\t\t\t\t\t\telse object = (elem.hasChild === false) ? null : \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\t//if (Object.keys(object).length === 0) addObject(object, elem.name, (elem.hasChild === false) ? null : \"\");\r\n\t\t\t\t\t//if (Object.keys(object).length === 0) object = (elem.hasChild === false) ? undefined : \"\";\r\n\t\t\t\t\tif (reviver) object = reviver(name || \"\", object);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn object;\r\n\t\t\t/***************** Fuctions *****************/\r\n\t\t\tfunction parseAttribute(tag, reviver) {\r\n\t\t\t\tif (!tag) return;\r\n\t\t\t\tconst list = tag.split(/([^\\s='\"]+(?:\\s*=\\s*(?:'[\\S\\s]*?'|\"[\\S\\s]*?\"|[^\\s'\"]*))?)/);\r\n\t\t\t\tconst length = list.length;\r\n\t\t\t\tlet attributes, val;\r\n\r\n\t\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\t\tlet str = removeSpaces(list[i]);\r\n\t\t\t\t\t//let str = removeBreakLine(list[i]);\r\n\t\t\t\t\t//let str = list[i]?.trim?.();\r\n\t\t\t\t\tif (!str) continue;\r\n\r\n\t\t\t\t\tif (!attributes) {\r\n\t\t\t\t\t\tattributes = {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pos = str.indexOf(\"=\");\r\n\t\t\t\t\tif (pos < 0) {\r\n\t\t\t\t\t\t// bare attribute\r\n\t\t\t\t\t\tstr = ATTRIBUTE_KEY + str;\r\n\t\t\t\t\t\tval = null;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// attribute key/value pair\r\n\t\t\t\t\t\tval = str.substr(pos + 1).replace(/^\\s+/, \"\");\r\n\t\t\t\t\t\tstr = ATTRIBUTE_KEY + str.substr(0, pos).replace(/\\s+$/, \"\");\r\n\r\n\t\t\t\t\t\t// quote: foo=\"FOO\" bar='BAR'\r\n\t\t\t\t\t\tconst firstChar = val[0];\r\n\t\t\t\t\t\tconst lastChar = val[val.length - 1];\r\n\t\t\t\t\t\tif (firstChar === lastChar && (firstChar === \"'\" || firstChar === '\"')) {\r\n\t\t\t\t\t\t\tval = val.substr(1, val.length - 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tval = unescapeXML(val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (reviver) val = reviver(str, val);\r\n\r\n\t\t\t\t\taddObject(attributes, str, val);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn attributes;\r\n\r\n\t\t\t\tfunction removeSpaces(str) {\r\n\t\t\t\t\t//return str && str.replace(/^\\s+|\\s+$/g, \"\");\r\n\t\t\t\t\treturn str?.trim?.();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction addObject(object, key, val, prevKey = key) {\r\n\t\t\t\tif (typeof val === \"undefined\") return;\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst prev = object[prevKey];\r\n\t\t\t\t\t//const curr = object[key];\r\n\t\t\t\t\tif (Array.isArray(prev)) prev.push(val);\r\n\t\t\t\t\telse if (prev) object[prevKey] = [prev, val];\r\n\t\t\t\t\telse object[key] = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction unescapeXML(str) {\r\n\t\t\treturn str.replace(/(&(?:lt|gt|amp|apos|quot|#(?:\\d{1,6}|x[0-9a-fA-F]{1,5}));)/g, function (str) {\r\n\t\t\t\tif (str[1] === \"#\") {\r\n\t\t\t\t\tconst code = (str[2] === \"x\") ? parseInt(str.substr(3), 16) : parseInt(str.substr(2), 10);\r\n\t\t\t\t\tif (code > -1) return String.fromCharCode(code);\r\n\t\t\t\t}\r\n\t\t\t\treturn UNESCAPE[str] || str;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tstatic stringify(json = new Object, tab = \"\") {\r\n\t\tconst ESCAPE = this.#ESCAPE;\r\n\t\tconst ATTRIBUTE_KEY = this.#ATTRIBUTE_KEY;\r\n\t\tconst CHILD_NODE_KEY = this.#CHILD_NODE_KEY;\r\n\t\tlet XML = \"\";\r\n\t\tfor (let elem in json) XML += toXml(json[elem], elem, \"\");\r\n\t\tXML = tab ? XML.replace(/\\t/g, tab) : XML.replace(/\\t|\\n/g, \"\");\r\n\t\treturn XML;\r\n\t\t/***************** Fuctions *****************/\r\n\t\tfunction toXml(Elem, Name, Ind) {\r\n\t\t\tlet xml = \"\";\r\n\t\t\tswitch (typeof Elem) {\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif (Array.isArray(Elem)) {\r\n\t\t\t\t\t\txml = Elem.reduce(\r\n\t\t\t\t\t\t\t(prevXML, currXML) => prevXML += `${Ind}${toXml(currXML, Name, `${Ind}\\t`)}\\n`,\r\n\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet attribute = \"\";\r\n\t\t\t\t\t\tlet hasChild = false;\r\n\t\t\t\t\t\tfor (let name in Elem) {\r\n\t\t\t\t\t\t\tif (name[0] === ATTRIBUTE_KEY) {\r\n\t\t\t\t\t\t\t\tattribute += ` ${name.substring(1)}=\\\"${Elem[name].toString()}\\\"`;\r\n\t\t\t\t\t\t\t\tdelete Elem[name];\r\n\t\t\t\t\t\t\t} else if (Elem[name] === undefined) Name = name;\r\n\t\t\t\t\t\t\telse hasChild = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\txml += `${Ind}<${Name}${attribute}${(hasChild || Name === \"link\") ? \"\" : \"/\"}>`;\r\n\r\n\t\t\t\t\t\tif (hasChild) {\r\n\t\t\t\t\t\t\tif (Name === \"plist\") xml += toPlist(Elem, Name, `${Ind}\\t`);\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfor (let name in Elem) {\r\n\t\t\t\t\t\t\t\t\tswitch (name) {\r\n\t\t\t\t\t\t\t\t\t\tcase CHILD_NODE_KEY:\r\n\t\t\t\t\t\t\t\t\t\t\txml += Elem[name] ?? \"\";\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\txml += toXml(Elem[name], name, `${Ind}\\t`);\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\txml += (xml.slice(-1) === \"\\n\" ? Ind : \"\") + `</${Name}>`;\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tswitch (Name) {\r\n\t\t\t\t\t\tcase \"?xml\":\r\n\t\t\t\t\t\t\txml += `${Ind}<${Name} ${Elem.toString()}>`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"?\":\r\n\t\t\t\t\t\t\txml += `${Ind}<${Name}${Elem.toString()}${Name}>`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"!--\":\r\n\t\t\t\t\t\t\txml += `${Ind}<!--${Elem.toString()}-->`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"!DOCTYPE\":\r\n\t\t\t\t\t\t\txml += `${Ind}<${Name} ${Elem.toString()}>`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"!CDATA\":\r\n\t\t\t\t\t\t\txml += `${Ind}<![CDATA[${Elem.toString()}]]>`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase CHILD_NODE_KEY:\r\n\t\t\t\t\t\t\txml += Elem;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\txml += `${Ind}<${Name}>${Elem.toString()}</${Name}>`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"undefined\":\r\n\t\t\t\t\txml += Ind + `<${Name.toString()}/>`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t};\r\n\t\t\treturn xml;\r\n\t\t};\r\n\r\n\t\tfunction toPlist(Elem, Name, Ind) {\r\n\t\t\tlet plist = \"\";\r\n\t\t\tswitch (typeof Elem) {\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tplist = `${Ind}<${Elem.toString()}/>`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t\tplist = `${Ind}<real>${Elem.toString()}</real>`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bigint\":\r\n\t\t\t\t\tplist = `${Ind}<integer>${Elem.toString()}</integer>`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tplist = `${Ind}<string>${Elem.toString()}</string>`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\tlet array = \"\";\r\n\t\t\t\t\tif (Array.isArray(Elem)) {\r\n\t\t\t\t\t\tfor (var i = 0, n = Elem.length; i < n; i++) array += `${Ind}${toPlist(Elem[i], Name, `${Ind}\\t`)}`;\r\n\t\t\t\t\t\tplist = `${Ind}<array>${array}${Ind}</array>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet dict = \"\";\r\n\t\t\t\t\t\tObject.entries(Elem).forEach(([key, value]) => {\r\n\t\t\t\t\t\t\tdict += `${Ind}<key>${key}</key>`;\r\n\t\t\t\t\t\t\tdict += toPlist(value, key, Ind);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tplist = `${Ind}<dict>${dict}${Ind}</dict>`;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn plist;\r\n\t\t};\r\n\t};\r\n}\r\n","import { log } from \"../utils/utils.mjs\";\r\n\r\n/** \r\n * Composite Subtitles\r\n * @param {Object} Sub1 - Sub1\r\n * @param {Object} Sub2 - Sub2\r\n * @param {Array} Kind - options = [\"asr\", \"captions\"]\r\n * @param {Number} Offset - Offset\r\n * @param {Number} Tolerance - Tolerance\r\n * @param {Array} Position - Position = [\"Forward\", \"Reverse\"]\r\n * @return {String} DualSub\r\n */\r\nexport default class Composite {\r\n\tconstructor(options = {}) {\r\n\t\tthis.Name = \"Composite\";\r\n\t\tthis.Version = \"1.0.2\";\r\n\t\tthis.Offset = 0;\r\n\t\tthis.Tolerance = 0;\r\n\t\tthis.Position = \"Forward\";\r\n\t\tObject.assign(this, options)\r\n\t\tlog(`\\n🟧 ${this.Name} v${this.Version}\\n`)\r\n\t}\r\n\r\n\tJSON(Sub1 = {}, Sub2 = {}, Kind = \"captions\", Offset = this.Offset, Tolerance = this.Tolerance, Position = this.Position) {\r\n\t\tlog(`☑️ Composite JSON Subtitles\\nOffset:${Offset}, Tolerance:${Tolerance}, Position:${Position}`, \"\");\r\n\t\t//let DualSub = Position.includes(\"Reverse\") ? Sub2 : Sub1\r\n\t\tlet DualSub = Sub1;\r\n\t\t//log(`🚧 let DualSub内容: ${JSON.stringify(DualSub)}`, \"\");\r\n\t\t// 有序数列 用不着排序\r\n\t\t//FirstSub.body.sort((x, y) => x - y);\r\n\t\t//SecondSub.body.sort((x, y) => x - y);\r\n\t\tlet index0 = 0, index1 = 0, index2 = 0;\r\n\t\t// 双指针法查找两个数组中的相同元素\r\n\t\tconst length1 = Sub1?.events?.length, length2 = Sub2?.events?.length;\r\n\t\tswitch (Kind) {\r\n\t\t\tcase \"asr\":\r\n\t\t\t\t// 自动生成字幕转普通字幕\r\n\t\t\t\tlog(`☑️ DualSub是自动生成字幕`, \"\");\r\n\t\t\t\tindex0 = 1, index1 = 1, index2 = 1;\r\n\t\t\t\tSub1.events = Sub1.events.map(event => {\r\n\t\t\t\t\tif (event?.segs) {\r\n\t\t\t\t\t\tif (Array.isArray(event?.segs)) event.segs = [{ \"utf8\": event.segs.map(seg => seg.utf8).join(\"\") }];\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdelete event.wWinId;\r\n\t\t\t\t\treturn event;\r\n\t\t\t\t});\r\n\t\t\t\tSub2.events = Sub2.events.map(event => {\r\n\t\t\t\t\tif (event?.segs) {\r\n\t\t\t\t\t\tif (Array.isArray(event?.segs)) event.segs = [{ \"utf8\": event.segs.map(seg => seg.utf8).join(\"\") }];\r\n\t\t\t\t\t};\r\n\t\t\t\t\tdelete event.wWinId;\r\n\t\t\t\t\treturn event;\r\n\t\t\t\t});\r\n\t\t\t\t//break; 不要break，连续处理\r\n\t\t\tcase \"captions\":\r\n\t\t\tdefault:\r\n\t\t\t\t// 处理普通字幕\r\n\t\t\t\twhile (index1 < length1 && index2 < length2) {\r\n\t\t\t\t\t//log(`🚧 index1/length1: ${index1}/${length1}, index2/length2: ${index2}/${length2}`, \"\");\r\n\t\t\t\t\tconst timeStamp1 = Sub1.events[index1].tStartMs, timeStamp2 = Sub2.events[index2].tStartMs;\r\n\t\t\t\t\t//log(`🚧 timeStamp1: ${timeStamp1}, timeStamp2: ${timeStamp2}`, \"\");\r\n\t\t\t\t\tconst timeStamp1Next = Sub1.events[index1 + 1]?.tStartMs ?? timeStamp1, timeStamp2Next = Sub2.events[index2 + 1]?.tStartMs ?? timeStamp2;\r\n\t\t\t\t\tif (Math.abs(timeStamp1 - timeStamp2) <= Tolerance) {\r\n\t\t\t\t\t\t//index0 = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t\t\t\tindex0 = index1;\r\n\t\t\t\t\t\t// 处理普通字幕\r\n\t\t\t\t\t\tconst text1 = Sub1.events[index1]?.segs?.[0].utf8 ?? \"\", text2 = Sub2.events[index2]?.segs?.[0].utf8 ?? \"\";\r\n\t\t\t\t\t\t//log(`🚧 text1: ${text1}, text2: ${text2}`, \"\");\r\n\t\t\t\t\t\tDualSub.events[index0].segs = [{ \"utf8\": ((Position === \"Reverse\") ? `${text2}\\n${text1}` : `${text1}\\n${text2}`).trim() }];\r\n\t\t\t\t\t\t//log(`🚧  DualSub.events[index0].segs[0].utf8: ${DualSub.events[index0].segs[0].utf8}`, \"\");\r\n\t\t\t\t\t\t//DualSub.body[index0].tStartMs = (Position === \"Reverse\") ? timeStamp2 : timeStamp1;\r\n\t\t\t\t\t\t//DualSub.body[index0].index = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (Math.abs(timeStamp1Next - timeStamp2Next) <= Tolerance) { index1++; index2++ }\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (timeStamp2 > timeStamp1) index1++\r\n\t\t\t\t\t\telse if (timeStamp1 > timeStamp2) index2++\r\n\t\t\t\t\t\telse { index1++; index2++ };\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t};\r\n\t\t//log(`✅ Composite JSON Subtitles, DualSub内容: ${JSON.stringify(DualSub)}`, \"\");\r\n\t\tlog(`✅ Composite JSON Subtitles`, \"\");\r\n\t\treturn DualSub;\r\n\t};\r\n\r\n\ttimedText(Sub1 = {}, Sub2 = {}, Kind = \"captions\", Offset = this.Offset, Tolerance = this.Tolerance, Position = this.Position) {\r\n\t\tlog(`☑️ Composite timedText Subtitles\\nOffset:${Offset}, Tolerance:${Tolerance}, Position:${Position}`, \"\");\r\n\t\t//let DualSub = Position.includes(\"Reverse\") ? Sub2 : Sub1\r\n\t\tlet DualSub = Sub1;\r\n\t\t//log(`🚧 let DualSub内容: ${JSON.stringify(DualSub)}`, \"\");\r\n\t\t// 有序数列 用不着排序\r\n\t\t//FirstSub.body.sort((x, y) => x - y);\r\n\t\t//SecondSub.body.sort((x, y) => x - y);\r\n\t\tlet index0 = 0, index1 = 0, index2 = 0;\r\n\t\t// 双指针法查找两个数组中的相同元素\r\n\t\tconst length1 = Sub1?.timedtext?.body?.p?.length, length2 = Sub2?.timedtext?.body?.p?.length;\r\n\t\tswitch (Kind) {\r\n\t\t\tcase \"asr\":\r\n\t\t\t\t// 自动生成字幕转普通字幕\r\n\t\t\t\tlog(`☑️ DualSub是自动生成字幕`, \"\");\r\n\t\t\t\tDualSub.timedtext.head.wp[1][\"@rc\"] = \"1\";\r\n\t\t\t\tSub1.timedtext.body.p = Sub1.timedtext.body.p.map(para => {\r\n\t\t\t\t\tif (para?.s) {\r\n\t\t\t\t\t\tif (Array.isArray(para?.s)) para[\"#\"] = para?.s.map(seg => seg[\"#\"]).join(\"\");\r\n\t\t\t\t\t\telse para[\"#\"] = para.s?.[\"#\"] ?? \"\";\r\n\t\t\t\t\t\tdelete para.s;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn para;\r\n\t\t\t\t});\r\n\t\t\t\tSub2.timedtext.body.p = Sub2.timedtext.body.p.map(para => {\r\n\t\t\t\t\tif (para?.s) {\r\n\t\t\t\t\t\tif (Array.isArray(para?.s)) para[\"#\"] = para?.s.map(seg => seg[\"#\"]).join(\"\");\r\n\t\t\t\t\t\telse para[\"#\"] = para.s?.[\"#\"] ?? \"\";\r\n\t\t\t\t\t\tdelete para.s;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn para;\r\n\t\t\t\t});\r\n\t\t\t\t//break; 不要break，连续处理\r\n\t\t\tcase \"captions\":\r\n\t\t\tdefault:\r\n\t\t\t\t// 处理普通字幕\r\n\t\t\t\twhile (index1 < length1 && index2 < length2) {\r\n\t\t\t\t\t//log(`🚧 index1/length1: ${index1}/${length1}, index2/length2: ${index2}/${length2}`, \"\");\r\n\t\t\t\t\tconst timeStamp1 = parseInt(Sub1.timedtext.body.p[index1][\"@t\"], 10), timeStamp2 = parseInt(Sub2.timedtext.body.p[index2][\"@t\"], 10);\r\n\t\t\t\t\t//log(`🚧 timeStamp1: ${timeStamp1}, timeStamp2: ${timeStamp2}`, \"\");\r\n\t\t\t\t\tconst timeStamp1Next = parseInt(Sub1.timedtext.body.p[index1 + 1]?.[\"@t\"] ?? timeStamp1, 10), timeStamp2Next = parseInt(Sub2.timedtext.body.p[index2 + 1]?.[\"@t\"] ?? timeStamp2, 10);\r\n\t\t\t\t\tif (Math.abs(timeStamp1 - timeStamp2) <= Tolerance) {\r\n\t\t\t\t\t\t//index0 = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t\t\t\tindex0 = index1;\r\n\t\t\t\t\t\t// 处理普通字幕\r\n\t\t\t\t\t\tconst text1 = Sub1.timedtext.body.p[index1]?.[\"#\"] ?? \"\", text2 = Sub2.timedtext.body.p[index2]?.[\"#\"] ?? \"\";\r\n\t\t\t\t\t\t//log(`🚧 text1: ${text1}, text2: ${text2}`, \"\");\r\n\t\t\t\t\t\tDualSub.timedtext.body.p[index0][\"#\"] = ((Position === \"Reverse\") ? `${text2}&#x000A;${text1}` : `${text1}&#x000A;${text2}`).trim();\r\n\t\t\t\t\t\t//log(`🚧 DualSub.timedtext.body.p[index0][\"#\"]: ${DualSub.timedtext.body.p[index0][\"#\"]}`, \"\");\r\n\t\t\t\t\t\t//DualSub.timedtext.body.p[index0][\"@t\"] = (Position === \"Reverse\") ? timeStamp2 : timeStamp1;\r\n\t\t\t\t\t\t//DualSub.timedtext.body.p[index0].index = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tif (Math.abs(timeStamp1Next - timeStamp2Next) <= Tolerance) { index1++; index2++ }\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (timeStamp2 > timeStamp1) index1++\r\n\t\t\t\t\t\telse if (timeStamp1 > timeStamp2) index2++\r\n\t\t\t\t\t\telse { index1++; index2++ };\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t};\r\n\t\t//log(`✅ Composite timedText Subtitles, DualSub内容: ${JSON.stringify(DualSub)}`, \"\");\r\n\t\tlog(`✅ Composite timedText Subtitles`, \"\");\r\n\t\treturn DualSub;\r\n\t};\r\n\r\n\twebVTT(Sub1 = {}, Sub2 = {}, Offset = this.Offset, Tolerance = this.Tolerance, Position = this.Position) {\r\n\t\tlog(`☑️ Composite webVTT Subtitles\\nOffset:${Offset}, Tolerance:${Tolerance}, Position:${Position}`, \"\");\r\n\t\t//let DualSub = Position.includes(\"Reverse\") ? Sub2 : Sub1\r\n\t\tlet DualSub = Sub1;\r\n\t\t//log(`🚧 let DualSub内容: ${JSON.stringify(DualSub)}`, \"\");\r\n\t\t// 有序数列 用不着排序\r\n\t\t//FirstSub.body.sort((x, y) => x - y);\r\n\t\t//SecondSub.body.sort((x, y) => x - y);\r\n\t\tlet index0 = 0, index1 = 0, index2 = 0;\r\n\t\t// 双指针法查找两个数组中的相同元素\r\n\t\tconst length1 = Sub1?.body?.length, length2 = Sub2?.body?.length;\r\n\t\twhile (index1 < length1 && index2 < length2) {\r\n\t\t\t//log(`🚧 index1/length1: ${index1}/${length1}, index2/length2: ${index2}/${length2}`, \"\");\r\n\t\t\tconst timeStamp1 = Sub1.body[index1].timeStamp, timeStamp2 = Sub2.body[index2].timeStamp;\r\n\t\t\t//log(`🚧 timeStamp1: ${timeStamp1}, timeStamp2: ${timeStamp2}`, \"\");\r\n\t\t\tconst timeStamp1Next = Sub1.body[index1 + 1]?.timeStamp ?? timeStamp1, timeStamp2Next = Sub2.body[index2 + 1]?.timeStamp ?? timeStamp2;\r\n\t\t\t// 处理普通字幕\r\n\t\t\tconst text1 = Sub1.body[index1]?.text ?? \"\", text2 = Sub2.body[index2]?.text ?? \"\";\r\n\t\t\t//log(`🚧 text1: ${text1}, text2: ${text2}`, \"\");\r\n\t\t\tif (Math.abs(timeStamp1 - timeStamp2) <= Tolerance) {\r\n\t\t\t\t//index0 = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t\tindex0 = index1;\r\n\t\t\t\t// 处理普通字幕\r\n\t\t\t\tDualSub.body[index0].text = ((Position === \"Reverse\") ? `${text2}\\n${text1}` : `${text1}\\n${text2}`).trim();\r\n\t\t\t\t//log(`🚧 index0: ${index0}, text: ${DualSub.body[index0].text}`, \"\");\r\n\t\t\t\t//DualSub.body[index0].timeStamp = (Position === \"Reverse\") ? timeStamp2 : timeStamp1;\r\n\t\t\t\t//DualSub.body[index0].index = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t}\r\n\t\t\tif (Math.abs(timeStamp1Next - timeStamp2Next) <= Tolerance) { index1++; index2++ }\r\n\t\t\telse {\r\n\t\t\t\tif (timeStamp2 > timeStamp1) index1++\r\n\t\t\t\telse if (timeStamp1 > timeStamp2) index2++\r\n\t\t\t\telse { index1++; index2++ };\r\n\t\t\t};\r\n\t\t};\r\n\t\t//log(`✅ Composite webVTT Subtitles, DualSub内容: ${JSON.stringify(DualSub)}`, \"\");\r\n\t\tlog(`✅ Composite webVTT Subtitles`, \"\");\r\n\t\treturn DualSub;\r\n\t};\r\n\r\n\r\n\tspotifyLyric(Lyric1 = [], Lyric2 = [], Offset = this.Offset, Tolerance = this.Tolerance, Position = this.Position) {\r\n\t\tlog(`☑️ Composite Spotify Lyrics\\nOffset:${Offset}, Tolerance:${Tolerance}, Position:${Position}`, \"\");\r\n\t\t//let Lyric = Position.includes(\"Reverse\") ? Lyric2 : Lyric1\r\n\t\tlet Lyric = Lyric1;\r\n\t\t//log(`🚧 let Lyric: ${JSON.stringify(Lyric)}`, \"\");\r\n\t\t// 有序数列 用不着排序\r\n\t\t//FirstSub.body.sort((x, y) => x - y);\r\n\t\t//SecondSub.body.sort((x, y) => x - y);\r\n\t\tlet index0 = 0, index1 = 0, index2 = 0;\r\n\t\t// 双指针法查找两个数组中的相同元素\r\n\t\tconst length1 = Lyric1?.length, length2 = Lyric2?.length;\r\n\t\twhile (index1 < length1 && index2 < length2) {\r\n\t\t\t//log(`🚧 index1/length1: ${index1}/${length1}, index2/length2: ${index2}/${length2}`, \"\");\r\n\t\t\tconst timeStamp1 = Lyric1[index1].startTimeMs, timeStamp2 = Lyric2[index2].startTimeMs + Offset;\r\n\t\t\t//log(`🚧 timeStamp1: ${timeStamp1}, timeStamp2: ${timeStamp2}`, \"\");\r\n\t\t\tconst timeStamp1Next = Lyric1[index1 + 1]?.startTimeMs ?? timeStamp1, timeStamp2Next = Lyric2[index2 + 1]?.startTimeMs + this.Offset ?? timeStamp2;\r\n\t\t\t// 处理普通字幕\r\n\t\t\tconst text1 = Lyric1[index1]?.words ?? \"\", text2 = Lyric2[index2]?.words ?? \"\";\r\n\t\t\t//log(`🚧 text1: ${text1}, text2: ${text2}`, \"\");\r\n\t\t\tif (Math.abs(timeStamp1 - timeStamp2) <= Tolerance) {\r\n\t\t\t\t//index0 = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t\tindex0 = index1;\r\n\t\t\t\t// 处理普通字幕\r\n\t\t\t\tLyric[index0].words = ((Position === \"Reverse\") ? `${text2}\\n${text1}` : `${text1}\\n${text2}`).trim();\r\n\t\t\t\tLyric[index0].owords = text1.trim();\r\n\t\t\t\tLyric[index0].twords = text2.trim();\r\n\t\t\t\t//log(`🚧 index0: ${index0}, words: ${Lyric[index0].words}`, \"\");\r\n\t\t\t\t//Lyric[index0].startTimeMs = (Position === \"Reverse\") ? timeStamp2 : timeStamp1;\r\n\t\t\t\t//Lyric[index0].index = (Position === \"Reverse\") ? index2 : index1;\r\n\t\t\t}\r\n\t\t\tif (Math.abs(timeStamp1Next - timeStamp2Next) <= Tolerance) { index1++; index2++ }\r\n\t\t\telse {\r\n\t\t\t\tif (timeStamp2 > timeStamp1) index1++\r\n\t\t\t\telse if (timeStamp1 > timeStamp2) index2++\r\n\t\t\t\telse { index1++; index2++ };\r\n\t\t\t};\r\n\t\t};\r\n\t\t//log(`✅ Composite Spotify Lyrics, Lyric: ${JSON.stringify(Lyric)}`, \"\");\r\n\t\tlog(`✅ Composite Spotify Lyrics`, \"\");\r\n\t\treturn Lyric;\r\n\t};\r\n};\r\n","import Default from \"./Default.json\" with { type: \"json\" };\r\nimport Universal from \"./Universal.json\" with { type: \"json\" };\r\nimport YouTube from \"./YouTube.json\" with { type: \"json\" };\r\nimport Netflix from \"./Netflix.json\" with { type: \"json\" };\r\nimport Spotify from \"./Spotify.json\" with { type: \"json\" };\r\nimport Composite from \"./Composite.json\" with { type: \"json\" };\r\nimport Translate from \"./Translate.json\" with { type: \"json\" };\r\nimport External from \"./External.json\" with { type: \"json\" };\r\nimport API from \"./API.json\" with { type: \"json\" };\r\n\r\nexport default {\r\n\tDefault,\r\n\tUniversal,\r\n\tYouTube,\r\n\tNetflix,\r\n\tSpotify,\r\n\tComposite,\r\n\tTranslate,\r\n\tExternal,\r\n\tAPI,\r\n};\r\n","import { log } from \"../utils/utils.mjs\";\r\n\r\n/**\r\n * Construct Subtitles Queue\r\n * @author VirgilClyne\r\n * @param {String} fileName - Request URL\r\n * @param {Array} VTTs1 - Primary (Source) Language Subtitles Array\r\n * @param {Array} VTTs2 - Second (Target) Language Subtitles Array\r\n * @return {Array<*>} Subtitles Requests Queue\r\n */\r\nexport default function constructSubtitlesQueue(request, fileName, VTTs1 = [], VTTs2 = []) {\r\n\tlog(`☑️ Construct Subtitles Queue, fileName: ${fileName}`, \"\");\r\n\tlet requests = [];\r\n\tlog(`🚧 Construct Subtitles Queue, VTTs1.length: ${VTTs1.length}, VTTs2.length: ${VTTs2.length}`, \"\")\r\n\t//log(`🚧 Construct Subtitles Queue, VTTs1: ${JSON.stringify(VTTs1)}, VTTs2.length: ${JSON.stringify(VTTs2)}`, \"\")\r\n\t// 查询当前字幕在原字幕队列中的位置\r\n\tconst Index1 = VTTs1.findIndex(item => item?.includes(fileName));\r\n\tlog(`🚧 Construct Subtitles Queue, Index1: ${Index1}`, \"\");\r\n\tswitch (VTTs2.length) {\r\n\t\tcase 0: // 长度为0，无须计算\r\n            log(`⚠ Construct Subtitles Queue, 长度为 0`, \"\")\r\n\t\t\tbreak;\r\n\t\tcase 1: { // 长度为1，无须计算\r\n\t\t\tlog(`⚠ Construct Subtitles Queue, 长度为 1`, \"\")\r\n\t\t\tlet request2 = {\r\n\t\t\t\t\"url\": VTTs2[0],\r\n\t\t\t\t\"headers\": request.headers\r\n\t\t\t};\r\n\t\t\trequests.push(request2);\r\n\t\t\tbreak;\r\n\t\t};\r\n\t\tcase VTTs1.length: { // 长度相等，一一对应，无须计算\r\n\t\t\tlog(`⚠ Construct Subtitles Queue, 长度相等`, \"\")\r\n\t\t\tlet request2 = {\r\n\t\t\t\t\"url\": VTTs2[Index1],\r\n\t\t\t\t\"headers\": request.headers\r\n\t\t\t};\r\n\t\t\trequests.push(request2);\r\n\t\t\tbreak;\r\n\t\t};\r\n\t\tdefault: { // 长度不等，需要计算\r\n\t\t\tlog(`⚠ Construct Subtitles Queue, 长度不等，需要计算`, \"\")\r\n\t\t\t// 计算当前字幕在原字幕队列中的百分比\r\n\t\t\tconst Position1 = (Index1 + 1) / VTTs1.length; // 从 0 开始计数，所以要加 1\r\n\t\t\tlog(`🚧 Construct Subtitles Queue, Position1: ${Position1}, Index2: ${Index1}/${VTTs1.length}`, \"\");\r\n\t\t\t// 根据百分比计算当前字幕在新字幕队列中的位置\r\n\t\t\t//let Index2 = VTTs2.findIndex(item => item.includes(fileName));\r\n\t\t\tconst Index2 = Math.round(Position1 * VTTs2.length - 1); // 从 0 开始计数，所以要减 1\r\n\t\t\tlog(`🚧 Construct Subtitles Queue, Position2: ${Position1}, Index2: ${Index2}/${VTTs2.length}`, \"\");\r\n\t\t\t// 获取两字幕队列长度差值\r\n\t\t\tconst diffLength = Math.abs(VTTs2.length - VTTs1.length);\r\n\t\t\t// 获取当前字幕在新字幕队列中的前后1个字幕\r\n\t\t\t//const BeginIndex = (Index2 - 1 < 0) ? 0 : Index2 - 1, EndIndex = Index2 + 1;\r\n\t\t\tconst BeginIndex = Math.min(Index1, Index2);\r\n\t\t\tconst EndIndex = Math.max(Index1, Index2);\r\n\t\t\tlog(`🚧 Construct Subtitles Queue, diffLength: ${diffLength}, BeginIndex: ${BeginIndex}, EndIndex: ${EndIndex}`, \"\");\r\n\t\t\tconst nearlyVTTs = VTTs2.slice(Math.max(0, BeginIndex - diffLength), Math.max(EndIndex, EndIndex + diffLength) + 1) // slice 不取 EndIndex 本身\r\n\t\t\t//const nearlyVTTs = VTTs2.slice(BeginIndex, EndIndex + 1); // slice 不取 EndIndex 本身\r\n\t\t\tlog(`🚧 Construct Subtitles Queue, nearlyVTTs: ${JSON.stringify(nearlyVTTs)}`, \"\");\r\n\t\t\tnearlyVTTs.forEach(url => {\r\n\t\t\t\tlet request2 = {\r\n\t\t\t\t\t\"url\": url,\r\n\t\t\t\t\t\"headers\": request.headers\r\n\t\t\t\t};\r\n\t\t\t\trequests.push(request2);\r\n\t\t\t});\r\n\t\t\t/*\r\n\t\t\trequests = nearlyVTTs.map(url => {\r\n\t\t\t\tlet _request = {\r\n\t\t\t\t\t\"url\": url,\r\n\t\t\t\t\t\"headers\": request.headers\r\n\t\t\t\t};\r\n\t\t\t\treturn _request;\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t\tbreak;\r\n\t\t};\r\n\t};\r\n\t//log(`🚧 Construct Subtitles Queue, requests: ${JSON.stringify(requests)}`, \"\");\r\n\tlog(`✅ Construct Subtitles Queue`, \"\");\r\n\treturn requests;\r\n};\r\n","import { log } from \"../utils/utils.mjs\";\r\n\r\n/**\r\n * detect Format\r\n * @author VirgilClyne\r\n * @param {Object} url - Parsed URL\r\n * @param {String} body - response body\r\n * @return {String} format - format\r\n */\r\nexport default function detectFormat(url = new URL(), body, format = undefined) {\r\n\tlog(`☑️ detectFormat, format: ${url.format || url.searchParams.get(\"fmt\") || url.searchParams.get(\"format\")}`, \"\");\r\n\tswitch (url.format || url.searchParams.get(\"fmt\") || url.searchParams.get(\"format\")) {\r\n\t\tcase \"txt\":\r\n\t\t\tformat = \"text/plain\";\r\n\t\t\tbreak;\r\n\t\tcase \"xml\":\r\n\t\tcase \"srv3\":\r\n\t\tcase \"ttml\":\r\n\t\tcase \"ttml2\":\r\n\t\tcase \"imsc\":\r\n\t\t\tformat = \"text/xml\";\r\n\t\t\tbreak;\r\n\t\tcase \"vtt\":\r\n\t\tcase \"webvtt\":\r\n\t\t\tformat = \"text/vtt\";\r\n\t\t\tbreak;\r\n\t\tcase \"json\":\r\n\t\tcase \"json3\":\r\n\t\t\tformat = \"application/json\";\r\n\t\t\tbreak;\r\n\t\tcase \"m3u\":\r\n\t\tcase \"m3u8\":\r\n\t\t\tformat = \"application/x-mpegurl\";\r\n\t\t\tbreak;\r\n\t\tcase \"plist\":\r\n\t\t\tformat = \"application/plist\";\r\n\t\t\tbreak;\r\n\t\tcase undefined:\r\n\t\t\tconst HEADER = body?.substring?.(0, 6).trim?.();\r\n\t\t\t//log(`🚧 detectFormat, HEADER: ${HEADER}`, \"\");\r\n\t\t\t//log(`🚧 detectFormat, HEADER?.substring?.(0, 1): ${HEADER?.substring?.(0, 1)}`, \"\");\r\n\t\t\tswitch (HEADER) {\r\n\t\t\t\tcase \"<?xml\":\r\n\t\t\t\t\tformat = \"text/xml\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"WEBVTT\":\r\n\t\t\t\t\tformat = \"text/vtt\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tswitch (HEADER?.substring?.(0, 1)) {\r\n\t\t\t\t\t\tcase \"0\":\r\n\t\t\t\t\t\tcase \"1\":\r\n\t\t\t\t\t\tcase \"2\":\r\n\t\t\t\t\t\tcase \"3\":\r\n\t\t\t\t\t\tcase \"4\":\r\n\t\t\t\t\t\tcase \"5\":\r\n\t\t\t\t\t\tcase \"6\":\r\n\t\t\t\t\t\tcase \"7\":\r\n\t\t\t\t\t\tcase \"8\":\r\n\t\t\t\t\t\tcase \"9\":\r\n\t\t\t\t\t\t\tformat = \"text/vtt\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"{\":\r\n\t\t\t\t\t\t\tformat = \"application/json\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tformat = format;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase undefined:\r\n\t\t\t\t\tformat = undefined;\r\n\t\t\t\t\tbreak;\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t};\r\n\tlog(`✅ detectFormat, format: ${format}`, \"\");\r\n\treturn format;\r\n};\r\n","import { log } from \"../utils/utils.mjs\";\r\n\r\nexport default function detectPlatform(url) {\r\n\tlog(`☑️ Detect Platform`, \"\");\r\n\t/***************** Platform *****************/\r\n\tlet Platform = /\\.(netflix\\.com|nflxvideo\\.net)/i.test(url) ? \"Netflix\"\r\n\t\t: /(\\.youtube|youtubei\\.googleapis)\\.com/i.test(url) ? \"YouTube\"\r\n\t\t\t: /\\.spotify(cdn)?\\.com/i.test(url) ? \"Spotify\"\r\n\t\t\t\t: /\\.apple\\.com/i.test(url) ? \"Apple\"\r\n\t\t\t\t\t: /\\.(dssott|starott)\\.com/i.test(url) ? \"Disney+\"\r\n\t\t\t\t\t\t: /primevideo\\.com|(\\.(pv-cdn|aiv-cdn|akamaihd|cloudfront)\\.net)|s3\\.amazonaws\\.com\\/aiv-prod-timedtext\\//i.test(url) ? \"PrimeVideo\"\r\n\t\t\t\t\t\t\t: /prd\\.media\\.h264\\.io/i.test(url) ? \"Max\"\r\n\t\t\t\t\t\t\t\t: /\\.(api\\.hbo|hbomaxcdn)\\.com/i.test(url) ? \"HBOMax\"\r\n\t\t\t\t\t\t\t\t\t: /\\.hulu(stream|im)?\\.com/i.test(url) ? \"Hulu\"\r\n\t\t\t\t\t\t\t\t\t\t: /\\.(pplus\\.paramount\\.tech|cbs(aavideo|cbsivideo)?\\.com)/i.test(url) ? \"Paramount+\"\r\n\t\t\t\t\t\t\t\t\t\t\t: /\\.uplynk\\.com/i.test(url) ? \"Discovery+\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: /dplus-ph-/i.test(url) ? \"Discovery+Ph\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: /\\.peacocktv\\.com/i.test(url) ? \"PeacockTV\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: /\\.fubo\\.tv/i.test(url) ? \"FuboTV\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: /\\.viki\\.io/i.test(url) ? \"Viki\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: /epix(hls\\.akamaized\\.net|\\.services\\.io)/i.test(url) ? \"MGM+\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: /\\.nebula\\.app/i.test(url) ? \"Nebula\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: /\\.pluto(\\.tv|tv\\.net)/i.test(url) ? \"PlutoTV\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: /\\.mubicdn\\.net/i.test(url) ? \"MUBI\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"Universal\";\r\n    log(`✅ Detect Platform, Platform: ${Platform}`, \"\");\r\n\treturn Platform;\r\n};\r\n","import { log } from \"../utils/utils.mjs\";\r\n\r\n/**\r\n * Set Cache\r\n * @author VirgilClyne\r\n * @param {Map} cache - Playlists Cache / Subtitles Cache\r\n * @param {Number} cacheSize - Cache Size\r\n * @return {Boolean} isSaved\r\n */\r\nexport default function setCache(cache, cacheSize = 100) {\r\n\tlog(`☑️ Set Cache, cacheSize: ${cacheSize}`, \"\");\r\n\tcache = Array.from(cache || []); // Map转Array\r\n\tcache = cache.slice(-cacheSize); // 限制缓存大小\r\n\tlog(`✅ Set Cache`, \"\");\r\n\treturn cache;\r\n};\r\n","import getStorage from '../utils/getStorage.mjs'\r\nimport { _, log } from \"../utils/utils.mjs\";\r\n\r\n/**\r\n * Set Environment Variables\r\n * @author VirgilClyne\r\n * @param {String} name - Persistent Store Key\r\n * @param {Array} platforms - Platform Names\r\n * @param {Object} database - Default DataBase\r\n * @return {Object} { Settings, Caches, Configs }\r\n */\r\nexport default function setENV(name, platforms, database) {\r\n\tlog(`☑️ Set Environment Variables`, \"\");\r\n\tlet { Settings, Caches, Configs } = getStorage(name, platforms, database);\r\n\t/***************** Settings *****************/\r\n\tif (!Array.isArray(Settings?.Types)) Settings.Types = (Settings.Types) ? [Settings.Types] : []; // 只有一个选项时，无逗号分隔\r\n\tlog(`✅ Set Environment Variables, Settings: ${typeof Settings}, Settings内容: ${JSON.stringify(Settings)}`, \"\");\r\n\t/***************** Caches *****************/\r\n\t//log(`✅ Set Environment Variables, Caches: ${typeof Caches}, Caches内容: ${JSON.stringify(Caches)}`, \"\");\r\n\tif (typeof Caches?.Playlists !== \"object\" || Array.isArray(Caches?.Playlists)) Caches.Playlists = {}; // 创建Playlists缓存\r\n\tCaches.Playlists.Master = new Map(JSON.parse(Caches?.Playlists?.Master || \"[]\")); // Strings转Array转Map\r\n\tCaches.Playlists.Subtitle = new Map(JSON.parse(Caches?.Playlists?.Subtitle || \"[]\")); // Strings转Array转Map\r\n\tif (typeof Caches?.Subtitles !== \"object\") Caches.Subtitles = new Map(JSON.parse(Caches?.Subtitles || \"[]\")); // Strings转Array转Map\r\n\tif (typeof Caches?.Metadatas !== \"object\" || Array.isArray(Caches?.Metadatas)) Caches.Metadatas = {}; // 创建Playlists缓存\r\n\tif (typeof Caches?.Metadatas?.Tracks !== \"object\") Caches.Metadatas.Tracks = new Map(JSON.parse(Caches?.Metadatas?.Tracks || \"[]\")); // Strings转Array转Map\r\n\t/***************** Configs *****************/\r\n\treturn { Settings, Caches, Configs };\r\n};\r\n","/* https://www.lodashjs.com */\r\nexport default class Lodash {\r\n\tstatic name = \"Lodash\";\r\n\tstatic version = \"1.2.2\";\r\n\tstatic about() { return console.log(`\\n🟧 ${this.name} v${this.version}\\n`) };\r\n\r\n\tstatic get(object = {}, path = \"\", defaultValue = undefined) {\r\n\t\t// translate array case to dot case, then split with .\r\n\t\t// a[0].b -> a.0.b -> ['a', '0', 'b']\r\n\t\tif (!Array.isArray(path)) path = this.toPath(path)\r\n\r\n\t\tconst result = path.reduce((previousValue, currentValue) => {\r\n\t\t\treturn Object(previousValue)[currentValue]; // null undefined get attribute will throwError, Object() can return a object \r\n\t\t}, object)\r\n\t\treturn (result === undefined) ? defaultValue : result;\r\n\t}\r\n\r\n\tstatic set(object = {}, path = \"\", value) {\r\n\t\tif (!Array.isArray(path)) path = this.toPath(path)\r\n\t\tpath\r\n\t\t\t.slice(0, -1)\r\n\t\t\t.reduce(\r\n\t\t\t\t(previousValue, currentValue, currentIndex) =>\r\n\t\t\t\t\t(Object(previousValue[currentValue]) === previousValue[currentValue])\r\n\t\t\t\t\t\t? previousValue[currentValue]\r\n\t\t\t\t\t\t: previousValue[currentValue] = (/^\\d+$/.test(path[currentIndex + 1]) ? [] : {}),\r\n\t\t\t\tobject\r\n\t\t\t)[path[path.length - 1]] = value\r\n\t\treturn object\r\n\t}\r\n\r\n\tstatic unset(object = {}, path = \"\") {\r\n\t\tif (!Array.isArray(path)) path = this.toPath(path)\r\n\t\tlet result = path.reduce((previousValue, currentValue, currentIndex) => {\r\n\t\t\tif (currentIndex === path.length - 1) {\r\n\t\t\t\tdelete previousValue[currentValue]\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn Object(previousValue)[currentValue]\r\n\t\t}, object)\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic toPath(value) {\r\n\t\treturn value.replace(/\\[(\\d+)\\]/g, '.$1').split('.').filter(Boolean);\r\n\t}\r\n\r\n\tstatic escape(string) {\r\n\t\tconst map = {\r\n\t\t\t'&': '&amp;',\r\n\t\t\t'<': '&lt;',\r\n\t\t\t'>': '&gt;',\r\n\t\t\t'\"': '&quot;',\r\n\t\t\t\"'\": '&#39;',\r\n\t\t}\r\n\t\treturn string.replace(/[&<>\"']/g, m => map[m])\r\n\t};\r\n\r\n\tstatic unescape(string) {\r\n\t\tconst map = {\r\n\t\t\t'&amp;': '&',\r\n\t\t\t'&lt;': '<',\r\n\t\t\t'&gt;': '>',\r\n\t\t\t'&quot;': '\"',\r\n\t\t\t'&#39;': \"'\",\r\n\t\t}\r\n\t\treturn string.replace(/&amp;|&lt;|&gt;|&quot;|&#39;/g, m => map[m])\r\n\t}\r\n\r\n}\r\n","import { $platform, _, log } from \"./utils.mjs\";\r\n/* https://developer.mozilla.org/zh-CN/docs/Web/API/Storage/setItem */\r\nexport default class Storage {\r\n\tstatic name = \"Storage\";\r\n\tstatic version = \"1.1.0\";\r\n\tstatic about () { return log(\"\", `🟧 ${this.name} v${this.version}`, \"\") };\r\n\tstatic data = null;\r\n\tstatic dataFile = 'box.dat';\r\n\tstatic #nameRegex = /^@(?<key>[^.]+)(?:\\.(?<path>.*))?$/;\r\n\r\n    static getItem(keyName = new String, defaultValue = null) {\r\n        let keyValue = defaultValue;\r\n        // 如果以 @\r\n\t\tswitch (keyName.startsWith('@')) {\r\n\t\t\tcase true:\r\n\t\t\t\tconst { key, path } = keyName.match(this.#nameRegex)?.groups;\r\n\t\t\t\t//log(`1: ${key}, ${path}`);\r\n\t\t\t\tkeyName = key;\r\n\t\t\t\tlet value = this.getItem(keyName, {});\r\n\t\t\t\t//log(`2: ${JSON.stringify(value)}`)\r\n\t\t\t\tif (typeof value !== \"object\") value = {};\r\n\t\t\t\t//log(`3: ${JSON.stringify(value)}`)\r\n\t\t\t\tkeyValue = _.get(value, path);\r\n\t\t\t\t//log(`4: ${JSON.stringify(keyValue)}`)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tkeyValue = JSON.parse(keyValue);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t};\r\n\t\t\t\t//log(`5: ${JSON.stringify(keyValue)}`)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tswitch ($platform) {\r\n\t\t\t\t\tcase 'Surge':\r\n\t\t\t\t\tcase 'Loon':\r\n\t\t\t\t\tcase 'Stash':\r\n\t\t\t\t\tcase 'Egern':\r\n\t\t\t\t\tcase 'Shadowrocket':\r\n\t\t\t\t\t\tkeyValue = $persistentStore.read(keyName);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Quantumult X':\r\n\t\t\t\t\t\tkeyValue = $prefs.valueForKey(keyName);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Node.js':\r\n\t\t\t\t\t\tthis.data = this.#loaddata(this.dataFile);\r\n\t\t\t\t\t\tkeyValue = this.data?.[keyName];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tkeyValue = this.data?.[keyName] || null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t\ttry {\r\n\t\t\t\t\tkeyValue = JSON.parse(keyValue);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t};\r\n\t\treturn keyValue ?? defaultValue;\r\n    };\r\n\r\n\tstatic setItem(keyName = new String, keyValue = new String) {\r\n\t\tlet result = false;\r\n\t\t//log(`0: ${typeof keyValue}`);\r\n\t\tswitch (typeof keyValue) {\r\n\t\t\tcase \"object\":\r\n\t\t\t\tkeyValue = JSON.stringify(keyValue);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tkeyValue = String(keyValue);\r\n\t\t\t\tbreak;\r\n\t\t};\r\n\t\tswitch (keyName.startsWith('@')) {\r\n\t\t\tcase true:\r\n\t\t\t\tconst { key, path } = keyName.match(this.#nameRegex)?.groups;\r\n\t\t\t\t//log(`1: ${key}, ${path}`);\r\n\t\t\t\tkeyName = key;\r\n\t\t\t\tlet value = this.getItem(keyName, {});\r\n\t\t\t\t//log(`2: ${JSON.stringify(value)}`)\r\n\t\t\t\tif (typeof value !== \"object\") value = {};\r\n\t\t\t\t//log(`3: ${JSON.stringify(value)}`)\r\n\t\t\t\t_.set(value, path, keyValue);\r\n\t\t\t\t//log(`4: ${JSON.stringify(value)}`)\r\n\t\t\t\tresult = this.setItem(keyName, value);\r\n\t\t\t\t//log(`5: ${result}`)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tswitch ($platform) {\r\n\t\t\t\t\tcase 'Surge':\r\n\t\t\t\t\tcase 'Loon':\r\n\t\t\t\t\tcase 'Stash':\r\n\t\t\t\t\tcase 'Egern':\r\n\t\t\t\t\tcase 'Shadowrocket':\r\n\t\t\t\t\t\tresult = $persistentStore.write(keyValue, keyName);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Quantumult X':\r\n\t\t\t\t\t\tresult =$prefs.setValueForKey(keyValue, keyName);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Node.js':\r\n\t\t\t\t\t\tthis.data = this.#loaddata(this.dataFile)\r\n\t\t\t\t\t\tthis.data[keyName] = keyValue\r\n\t\t\t\t\t\tthis.#writedata(this.dataFile)\r\n\t\t\t\t\t\tresult = true\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tresult = this.data?.[keyName] || null\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t};\r\n\t\treturn result;\r\n\t};\r\n\r\n    static removeItem(keyName){\r\n\t\tlet result = false;\r\n\t\tswitch (keyName.startsWith('@')) {\r\n\t\t\tcase true:\r\n\t\t\t\tconst { key, path } = keyName.match(this.#nameRegex)?.groups;\r\n\t\t\t\tkeyName = key;\r\n\t\t\t\tlet value = this.getItem(keyName);\r\n\t\t\t\tif (typeof value !== \"object\") value = {};\r\n\t\t\t\tkeyValue = _.unset(value, path);\r\n\t\t\t\tresult = this.setItem(keyName, value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tswitch ($platform) {\r\n\t\t\t\t\tcase 'Surge':\r\n\t\t\t\t\tcase 'Loon':\r\n\t\t\t\t\tcase 'Stash':\r\n\t\t\t\t\tcase 'Egern':\r\n\t\t\t\t\tcase 'Shadowrocket':\r\n\t\t\t\t\t\tresult = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Quantumult X':\r\n\t\t\t\t\t\tresult = $prefs.removeValueForKey(keyName);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'Node.js':\r\n\t\t\t\t\t\tresult = false\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tresult = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t};\r\n\t\treturn result;\r\n    }\r\n\r\n    static clear() {\r\n\t\tlet result = false;\r\n\t\tswitch ($platform) {\r\n\t\t\tcase 'Surge':\r\n\t\t\tcase 'Loon':\r\n\t\t\tcase 'Stash':\r\n\t\t\tcase 'Egern':\r\n\t\t\tcase 'Shadowrocket':\r\n\t\t\t\tresult = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Quantumult X':\r\n\t\t\t\tresult = $prefs.removeAllValues();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Node.js':\r\n\t\t\t\tresult = false\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tresult = false;\r\n\t\t\t\tbreak;\r\n\t\t};\r\n\t\treturn result;\r\n    }\r\n\r\n\tstatic #loaddata(dataFile) {\r\n\t\tif (this.isNode()) {\r\n\t\t\tthis.fs = this.fs ? this.fs : require('fs')\r\n\t\t\tthis.path = this.path ? this.path : require('path')\r\n\t\t\tconst curDirDataFilePath = this.path.resolve(dataFile)\r\n\t\t\tconst rootDirDataFilePath = this.path.resolve(\r\n\t\t\t\tprocess.cwd(),\r\n\t\t\t\tdataFile\r\n\t\t\t)\r\n\t\t\tconst isCurDirDataFile = this.fs.existsSync(curDirDataFilePath)\r\n\t\t\tconst isRootDirDataFile =\r\n\t\t\t\t!isCurDirDataFile && this.fs.existsSync(rootDirDataFilePath)\r\n\t\t\tif (isCurDirDataFile || isRootDirDataFile) {\r\n\t\t\t\tconst datPath = isCurDirDataFile\r\n\t\t\t\t\t? curDirDataFilePath\r\n\t\t\t\t\t: rootDirDataFilePath\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn JSON.parse(this.fs.readFileSync(datPath))\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treturn {}\r\n\t\t\t\t}\r\n\t\t\t} else return {}\r\n\t\t} else return {}\r\n\t}\r\n\r\n\tstatic #writedata(dataFile = this.dataFile) {\r\n\t\tif (this.isNode()) {\r\n\t\t\tthis.fs = this.fs ? this.fs : require('fs')\r\n\t\t\tthis.path = this.path ? this.path : require('path')\r\n\t\t\tconst curDirDataFilePath = this.path.resolve(dataFile)\r\n\t\t\tconst rootDirDataFilePath = this.path.resolve(\r\n\t\t\t\tprocess.cwd(),\r\n\t\t\t\tdataFile\r\n\t\t\t)\r\n\t\t\tconst isCurDirDataFile = this.fs.existsSync(curDirDataFilePath)\r\n\t\t\tconst isRootDirDataFile =\r\n\t\t\t\t!isCurDirDataFile && this.fs.existsSync(rootDirDataFilePath)\r\n\t\t\tconst jsondata = JSON.stringify(this.data)\r\n\t\t\tif (isCurDirDataFile) {\r\n\t\t\t\tthis.fs.writeFileSync(curDirDataFilePath, jsondata)\r\n\t\t\t} else if (isRootDirDataFile) {\r\n\t\t\t\tthis.fs.writeFileSync(rootDirDataFilePath, jsondata)\r\n\t\t\t} else {\r\n\t\t\t\tthis.fs.writeFileSync(curDirDataFilePath, jsondata)\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n}\r\n","export default class URL {\r\n\tconstructor(url, base = undefined) {\r\n\t\tconst name = \"URL\";\r\n\t\tconst version = \"2.1.2\";\r\n\t\tconsole.log(`\\n🟧 ${name} v${version}\\n`);\r\n\t\turl = this.#parse(url, base);\r\n\t\treturn this;\r\n\t};\r\n\r\n\t#parse(url, base = undefined) {\r\n\t\tconst URLRegex = /(?:(?<protocol>\\w+:)\\/\\/(?:(?<username>[^\\s:\"]+)(?::(?<password>[^\\s:\"]+))?@)?(?<host>[^\\s@/]+))?(?<pathname>\\/?[^\\s@?]+)?(?<search>\\?[^\\s?]+)?/\r\n\t\tconst PortRegex = /(?<hostname>.+):(?<port>\\d+)$/;\r\n\t\turl = url.match(URLRegex)?.groups || {};\r\n\t\tif (base) {\r\n\t\t\tbase = base?.match(URLRegex)?.groups || {};\r\n\t\t\tif (!base.protocol || !base.hostname) throw new Error(`🚨 ${name}, ${base} is not a valid URL`);\r\n\t\t};\r\n\t\tif (url.protocol || base?.protocol) this.protocol = url.protocol || base.protocol;\r\n\t\tif (url.username || base?.username) this.username = url.username || base.username;\r\n\t\tif (url.password || base?.password) this.password = url.password || base.password;\r\n\t\tif (url.host || base?.host) {\r\n\t\t\tthis.host = url.host || base.host;\r\n\t\t\tObject.freeze(this.host);\r\n\t\t\tthis.hostname = this.host.match(PortRegex)?.groups.hostname ?? this.host;\r\n\t\t\tthis.port = this.host.match(PortRegex)?.groups.port ?? \"\";\r\n\t\t};\r\n\t\tif (url.pathname || base?.pathname) {\r\n\t\t\tthis.pathname = url.pathname || base?.pathname;\r\n\t\t\tif (!this.pathname.startsWith(\"/\")) this.pathname = \"/\" + this.pathname;\r\n\t\t\tthis.paths = this.pathname.split(\"/\").filter(Boolean);\r\n\t\t\tObject.freeze(this.paths);\r\n\t\t\tif (this.paths) {\r\n\t\t\t\tconst fileName = this.paths[this.paths.length - 1];\r\n\t\t\t\tif (fileName?.includes(\".\")) {\r\n\t\t\t\t\tconst list = fileName.split(\".\");\r\n\t\t\t\t\tthis.format = list[list.length - 1];\r\n\t\t\t\t\tObject.freeze(this.format);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} else this.pathname = \"\";\r\n\t\tif (url.search || base?.search) {\r\n\t\t\tthis.search = url.search || base.search;\r\n\t\t\tObject.freeze(this.search);\r\n\t\t\tif (this.search) this.searchParams = this.search.slice(1).split(\"&\").map((param) => param.split(\"=\"));\r\n\t\t};\r\n\t\tthis.searchParams = new Map(this.searchParams || []);\r\n\t\tthis.harf = this.toString();\r\n\t\tObject.freeze(this.harf);\r\n\t\treturn this;\r\n\t};\r\n\r\n\ttoString() {\r\n\t\tlet string = \"\";\r\n\t\tif (this.protocol) string += this.protocol + \"//\";\r\n\t\tif (this.username) string += this.username + (this.password ? \":\" + this.password : \"\") + \"@\";\r\n\t\tif (this.hostname) string += this.hostname;\r\n\t\tif (this.port) string += \":\" + this.port;\r\n\t\tif (this.pathname) string += this.pathname;\r\n\t\tif (this.searchParams.size !== 0) string += \"?\" + Array.from(this.searchParams).map(param => param.join(\"=\")).join(\"&\");\r\n\t\treturn string;\r\n\t};\r\n\r\n\ttoJSON() { return JSON.stringify({ ...this }) };\r\n}\r\n","import { $platform, _, log } from \"./utils.mjs\";\r\n\r\nexport default function done(object = {}) {\r\n    switch ($platform) {\r\n        case \"Surge\":\r\n            if (object.policy) _.set(object, \"headers.X-Surge-Policy\", object.policy);\r\n            log(\"\", `🚩 执行结束! 🕛 ${(new Date().getTime() / 1000 - $script.startTime)} 秒`, \"\");\r\n            $done(object);\r\n            break;\r\n        case \"Loon\":\r\n            if (object.policy) object.node = object.policy;\r\n            log(\"\", `🚩 执行结束! 🕛 ${(new Date() - $script.startTime) / 1000} 秒`, \"\");\r\n            $done(object);\r\n            break;\r\n        case \"Stash\":\r\n            if (object.policy) _.set(object, \"headers.X-Stash-Selected-Proxy\", encodeURI(object.policy));\r\n            log(\"\", `🚩 执行结束! 🕛 ${(new Date() - $script.startTime) / 1000} 秒`, \"\");\r\n            $done(object);\r\n            break;\r\n        case \"Egern\":\r\n            log(\"\", `🚩 执行结束!`, \"\");\r\n            $done(object);\r\n            break;\r\n        case \"Shadowrocket\":\r\n        default:\r\n            log(\"\", `🚩 执行结束!`, \"\");\r\n            $done(object);\r\n            break;\r\n        case \"Quantumult X\":\r\n            if (object.policy) _.set(object, \"opts.policy\", object.policy);\r\n            // 移除不可写字段\r\n            delete object[\"auto-redirect\"];\r\n            delete object[\"auto-cookie\"];\r\n            delete object[\"binary-mode\"];\r\n            delete object.charset;\r\n            delete object.host;\r\n            delete object.insecure;\r\n            delete object.method; // 1.4.x 不可写\r\n            delete object.opt; // $task.fetch() 参数, 不可写\r\n            delete object.path; // 可写, 但会与 url 冲突\r\n            delete object.policy;\r\n            delete object[\"policy-descriptor\"];\r\n            delete object.scheme;\r\n            delete object.sessionIndex;\r\n            delete object.statusCode;\r\n            delete object.timeout;\r\n            if (object.body instanceof ArrayBuffer) {\r\n                object.bodyBytes = object.body;\r\n                delete object.body;\r\n            } else if (ArrayBuffer.isView(object.body)) {\r\n                object.bodyBytes = object.body.buffer.slice(object.body.byteOffset, object.body.byteLength + object.body.byteOffset);\r\n                delete object.body;\r\n            } else if (object.body) delete object.bodyBytes;\r\n            log(\"\", `🚩 执行结束!`, \"\");\r\n            $done(object);\r\n            break;\r\n        case \"Node.js\":\r\n            log(\"\", `🚩 执行结束!`, \"\");\r\n            process.exit(1);\r\n            break;\r\n    }\r\n}\r\n","import { $platform, _ } from \"./utils.mjs\";\r\nimport initGotEnv from \"./initGotEnv.mjs\";\r\nexport default async function fetch(request = {} || \"\", option = {}) {\r\n    // 初始化参数\r\n    switch (request.constructor) {\r\n        case Object:\r\n            request = { ...option, ...request };\r\n            break;\r\n        case String:\r\n            request = { ...option, \"url\": request };\r\n            break;\r\n    };\r\n    // 自动判断请求方法\r\n    if (!request.method) {\r\n        request.method = \"GET\";\r\n        if (request.body ?? request.bodyBytes) request.method = \"POST\";\r\n    };\r\n    // 移除请求头中的部分参数, 让其自动生成\r\n    delete request.headers?.Host;\r\n    delete request.headers?.[\":authority\"];\r\n    delete request.headers?.[\"Content-Length\"];\r\n    delete request.headers?.[\"content-length\"];\r\n    // 定义请求方法（小写）\r\n    const method = request.method.toLocaleLowerCase();\r\n    // 判断平台\r\n    switch ($platform) {\r\n        case \"Loon\":\r\n        case \"Surge\":\r\n        case \"Stash\":\r\n        case \"Egern\":\r\n        case \"Shadowrocket\":\r\n        default:\r\n            // 转换请求参数\r\n            if (request.timeout) {\r\n                request.timeout = parseInt(request.timeout, 10);\r\n                switch ($platform) {\r\n                    case \"Loon\":\r\n                    case \"Shadowrocket\":\r\n                    case \"Stash\":\r\n                    case \"Egern\":\r\n                    default:\r\n                        request.timeout = request.timeout / 1000;\r\n                        break;\r\n                    case \"Surge\":\r\n                        break;\r\n                };\r\n            };\r\n            if (request.policy) {\r\n                switch ($platform) {\r\n                    case \"Loon\":\r\n                        request.node = request.policy;\r\n                        break;\r\n                    case \"Stash\":\r\n                        _.set(request, \"headers.X-Stash-Selected-Proxy\", encodeURI(request.policy));\r\n                        break;\r\n                    case \"Shadowrocket\":\r\n                        _.set(request, \"headers.X-Surge-Proxy\", request.policy);\r\n                        break;\r\n                };\r\n            };\r\n            if (typeof request.redirection === \"boolean\") request[\"auto-redirect\"] = request.redirection;\r\n            // 转换请求体\r\n            if (request.bodyBytes && !request.body) {\r\n                request.body = request.bodyBytes;\r\n                delete request.bodyBytes;\r\n            };\r\n            // 发送请求\r\n            return await new Promise((resolve, reject) => {\r\n                $httpClient[method](request, (error, response, body) => {\r\n                    if (error) reject(error);\r\n                    else {\r\n                        response.ok = /^2\\d\\d$/.test(response.status);\r\n                        response.statusCode = response.status;\r\n                        if (body) {\r\n                            response.body = body;\r\n                            if (request[\"binary-mode\"] == true) response.bodyBytes = body;\r\n                        };\r\n                        resolve(response);\r\n                    }\r\n                });\r\n            });\r\n        case \"Quantumult X\":\r\n            // 转换请求参数\r\n            if (request.policy) _.set(request, \"opts.policy\", request.policy);\r\n            if (typeof request[\"auto-redirect\"] === \"boolean\") _.set(request, \"opts.redirection\", request[\"auto-redirect\"]);\r\n            // 转换请求体\r\n            if (request.body instanceof ArrayBuffer) {\r\n                request.bodyBytes = request.body;\r\n                delete request.body;\r\n            } else if (ArrayBuffer.isView(request.body)) {\r\n                request.bodyBytes = request.body.buffer.slice(request.body.byteOffset, request.body.byteLength + request.body.byteOffset);\r\n                delete object.body;\r\n            } else if (request.body) delete request.bodyBytes;\r\n            // 发送请求\r\n            return await $task.fetch(request).then(\r\n                response => {\r\n                    response.ok = /^2\\d\\d$/.test(response.statusCode);\r\n                    response.status = response.statusCode;\r\n                    return response;\r\n                },\r\n                reason => Promise.reject(reason.error));\r\n        case \"Node.js\":\r\n            let iconv = require(\"iconv-lite\")\r\n            initGotEnv(request)\r\n            const { url, ...option } = request\r\n            return await this.got[method](url, option)\r\n                .on(\"redirect\", (response, nextOpts) => {\r\n                    try {\r\n                        if (response.headers[\"set-cookie\"]) {\r\n                            const ck = response.headers[\"set-cookie\"]\r\n                                .map(this.cktough.Cookie.parse)\r\n                                .toString()\r\n                            if (ck) {\r\n                                this.ckjar.setCookieSync(ck, null)\r\n                            }\r\n                            nextOpts.cookieJar = this.ckjar\r\n                        }\r\n                    } catch (e) {\r\n                        this.logErr(e)\r\n                    }\r\n                    // this.ckjar.setCookieSync(response.headers[\"set-cookie\"].map(Cookie.parse).toString())\r\n                })\r\n                .then(\r\n                    response => {\r\n                        response.statusCode = response.status;\r\n                        response.body = iconv.decode(response.rawBody, \"utf-8\");\r\n                        response.bodyBytes = response.rawBody;\r\n                        return response;\r\n                    },\r\n                    error => Promise.reject(error.message));\r\n    };\r\n};\r\n","import { _, Storage, log } from \"./utils.mjs\";\r\n\r\n/**\r\n * Get Storage Variables\r\n * @link https://github.com/NanoCat-Me/utils/blob/main/getStorage.mjs\r\n * @author VirgilClyne\r\n * @param {String} key - Persistent Store Key\r\n * @param {Array} names - Platform Names\r\n * @param {Object} database - Default Database\r\n * @return {Object} { Settings, Caches, Configs }\r\n */\r\nexport default function getStorage(key, names, database) {\r\n    //log(`☑️ getStorage, Get Environment Variables`, \"\");\r\n    /***************** BoxJs *****************/\r\n    // 包装为局部变量，用完释放内存\r\n    // BoxJs的清空操作返回假值空字符串, 逻辑或操作符会在左侧操作数为假值时返回右侧操作数。\r\n    let BoxJs = Storage.getItem(key, database);\r\n    //log(`🚧 getStorage, Get Environment Variables`, `BoxJs类型: ${typeof BoxJs}`, `BoxJs内容: ${JSON.stringify(BoxJs)}`, \"\");\r\n    /***************** Argument *****************/\r\n    let Argument = {};\r\n    switch (typeof $argument) {\r\n        case \"string\":\r\n            let arg = Object.fromEntries($argument.split(\"&\").map((item) => item.split(\"=\").map(i => i.replace(/\\\"/g, ''))));\r\n            for (let item in arg) _.set(Argument, item, arg[item]);\r\n            break;\r\n        case \"object\":\r\n            for (let item in $argument) _.set(Argument, item, $argument[item]);\r\n            break;\r\n        case \"undefined\":\r\n            break;\r\n    };\r\n    //log(`✅ getStorage, Get Environment Variables`, `Argument类型: ${typeof Argument}`, `Argument内容: ${JSON.stringify(Argument)}`, \"\");\r\n    /***************** Store *****************/\r\n    const Store = { Settings: database?.Default?.Settings || {}, Configs: database?.Default?.Configs || {}, Caches: {} };\r\n    if (!Array.isArray(names)) names = [names];\r\n    //log(`🚧 getStorage, Get Environment Variables`, `names类型: ${typeof names}`, `names内容: ${JSON.stringify(names)}`, \"\");\r\n    for (let name of names) {\r\n        Store.Settings = { ...Store.Settings, ...database?.[name]?.Settings, ...Argument, ...BoxJs?.[name]?.Settings };\r\n        Store.Configs = { ...Store.Configs, ...database?.[name]?.Configs };\r\n        if (BoxJs?.[name]?.Caches && typeof BoxJs?.[name]?.Caches === \"string\") BoxJs[name].Caches = JSON.parse(BoxJs?.[name]?.Caches);\r\n        Store.Caches = { ...Store.Caches, ...BoxJs?.[name]?.Caches };\r\n    };\r\n    //log(`🚧 getStorage, Get Environment Variables`, `Store.Settings类型: ${typeof Store.Settings}`, `Store.Settings: ${JSON.stringify(Store.Settings)}`, \"\");\r\n    traverseObject(Store.Settings, (key, value) => {\r\n        //log(`🚧 getStorage, traverseObject`, `${key}: ${typeof value}`, `${key}: ${JSON.stringify(value)}`, \"\");\r\n        if (value === \"true\" || value === \"false\") value = JSON.parse(value); // 字符串转Boolean\r\n        else if (typeof value === \"string\") {\r\n            if (value.includes(\",\")) value = value.split(\",\").map(item => string2number(item)); // 字符串转数组转数字\r\n            else value = string2number(value); // 字符串转数字\r\n        };\r\n        return value;\r\n    });\r\n    //log(`✅ getStorage, Get Environment Variables`, `Store: ${typeof Store.Caches}`, `Store内容: ${JSON.stringify(Store)}`, \"\");\r\n    return Store;\r\n    /***************** function *****************/\r\n    function traverseObject(o, c) { for (var t in o) { var n = o[t]; o[t] = \"object\" == typeof n && null !== n ? traverseObject(n, c) : c(t, n) } return o }\r\n    function string2number(string) { if (string && !isNaN(string)) string = parseInt(string, 10); return string }\r\n};\r\n","export default function initGotEnv(opts) {\r\n    this.got = this.got ? this.got : require(\"got\");\r\n    this.cktough = this.cktough ? this.cktough : require(\"tough-cookie\");\r\n    this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar();\r\n    if (opts) {\r\n        opts.headers = opts.headers ? opts.headers : {}\r\n        if (undefined === opts.headers.Cookie && undefined === opts.cookieJar) {\r\n            opts.cookieJar = this.ckjar\r\n        }\r\n    };\r\n};\r\n","import { $platform, log } from \"./utils.mjs\";\r\nexport default function logError(error) {\r\n    switch ($platform) {\r\n        case \"Surge\":\r\n        case \"Loon\":\r\n        case \"Stash\":\r\n        case \"Egern\":\r\n        case \"Shadowrocket\":\r\n        case \"Quantumult X\":\r\n        default:\r\n            log(\"\", `❗️执行错误!`, error, \"\");\r\n            break\r\n        case \"Node.js\":\r\n            log(\"\", `❗️执行错误!`, error.stack, \"\");\r\n            break\r\n    };\r\n};\r\n","import { $platform, log } from \"./utils.mjs\";\r\n/**\r\n * 系统通知\r\n *\r\n * > 通知参数: 同时支持 QuanX 和 Loon 两种格式, EnvJs根据运行环境自动转换, Surge 环境不支持多媒体通知\r\n *\r\n * 示例:\r\n * $.msg(title, subtitle, body, \"twitter://\")\r\n * $.msg(title, subtitle, body, { \"open-url\": \"twitter://\", \"media-url\": \"https://github.githubassets.com/images/modules/open_graph/github-mark.png\" })\r\n * $.msg(title, subtitle, body, { \"open-url\": \"https://bing.com\", \"media-url\": \"https://github.githubassets.com/images/modules/open_graph/github-mark.png\" })\r\n *\r\n * @param {*} title 标题\r\n * @param {*} subtitle 副标题\r\n * @param {*} body 内容\r\n * @param {*} mutableContent 通知扩展字段\r\n *\r\n */\r\nexport default function notification(title = \"\", subtitle = \"\", body = \"\", mutableContent) {\r\n    switch ($platform) {\r\n        case \"Surge\":\r\n        case \"Loon\":\r\n        case \"Stash\":\r\n        case \"Egern\":\r\n        case \"Shadowrocket\":\r\n        default:\r\n            $notification.post(title, subtitle, body, MutableContent(mutableContent))\r\n            break\r\n        case \"Quantumult X\":\r\n            $notify(title, subtitle, body, MutableContent(mutableContent))\r\n            break\r\n        case \"Node.js\":\r\n            break\r\n    };\r\n    log(...[\"\", \"==============📣系统通知📣==============\", subtitle || \"\", body || \"\"]);\r\n    const MutableContent = (content) => {\r\n        switch (typeof content) {\r\n            case undefined:\r\n                return content\r\n            case \"string\":\r\n                switch ($platform) {\r\n                    case \"Surge\":\r\n                    case \"Stash\":\r\n                    case \"Egern\":\r\n                    default:\r\n                        return { url: content };\r\n                    case \"Loon\":\r\n                    case \"Shadowrocket\":\r\n                        return content\r\n                    case \"Quantumult X\":\r\n                        return { \"open-url\": content };\r\n                    case \"Node.js\":\r\n                        return undefined;\r\n                }\r\n            case \"object\":\r\n                switch ($platform) {\r\n                    case \"Surge\":\r\n                    case \"Stash\":\r\n                    case \"Egern\":\r\n                    case \"Shadowrocket\":\r\n                    default: {\r\n                        let openUrl = content.url || content.openUrl || content[\"open-url\"];\r\n                        return { url: openUrl };\r\n                    }\r\n                    case \"Loon\": {\r\n                        let openUrl = content.openUrl || content.url || content[\"open-url\"];\r\n                        let mediaUrl = content.mediaUrl || content[\"media-url\"];\r\n                        return { openUrl, mediaUrl };\r\n                    }\r\n                    case \"Quantumult X\": {\r\n                        let openUrl = content[\"open-url\"] || content.url || content.openUrl;\r\n                        let mediaUrl = content[\"media-url\"] || content.mediaUrl;\r\n                        let updatePasteboard = content[\"update-pasteboard\"] || content.updatePasteboard;\r\n                        return {\r\n                            \"open-url\": openUrl,\r\n                            \"media-url\": mediaUrl,\r\n                            \"update-pasteboard\": updatePasteboard\r\n                        };\r\n                    }\r\n                    case \"Node.js\":\r\n                        return undefined;\r\n                }\r\n            default:\r\n                return undefined;\r\n        }\r\n    };\r\n};\r\n","export const $platform = platform();\r\nexport function platform() {\r\n    if (\"undefined\" !== typeof $environment && $environment[\"surge-version\"])\r\n        return \"Surge\"\r\n    if (\"undefined\" !== typeof $environment && $environment[\"stash-version\"])\r\n        return \"Stash\"\r\n    if (\"undefined\" !== typeof module && !!module.exports) return \"Node.js\"\r\n    if (\"undefined\" !== typeof $task) return \"Quantumult X\"\r\n    if (\"undefined\" !== typeof $loon) return \"Loon\"\r\n    if (\"undefined\" !== typeof $rocket) return \"Shadowrocket\"\r\n    if (\"undefined\" !== typeof Egern) return \"Egern\"\r\n}\r\n","import { _, Storage, fetch, logError } from \"./utils.mjs\";\r\n\r\nexport default async function runScript(script, runOpts) {\r\n    let httpapi = Storage.getItem(\"@chavy_boxjs_userCfgs.httpapi\");\r\n    httpapi = httpapi?.replace?.(/\\n/g, \"\")?.trim();\r\n    let httpapi_timeout = Storage.getItem(\"@chavy_boxjs_userCfgs.httpapi_timeout\");\r\n    httpapi_timeout = (httpapi_timeout * 1) ?? 20;\r\n    httpapi_timeout = runOpts?.timeout ?? httpapi_timeout;\r\n    const [password, address] = httpapi.split(\"@\");\r\n    const request = {\r\n        url: `http://${address}/v1/scripting/evaluate`,\r\n        body: {\r\n            script_text: script,\r\n            mock_type: \"cron\",\r\n            timeout: httpapi_timeout\r\n        },\r\n        headers: { \"X-Key\": password, \"Accept\": \"*/*\" },\r\n        timeout: httpapi_timeout\r\n    };\r\n    await fetch(request).then(response => response.body, error => logError(error));\r\n}\r\n","import { $platform } from \"./platform.mjs\";\r\nimport URL from \"./URL.mjs\";\r\nimport _ from \"./Lodash.mjs\";\r\nimport Storage from \"./Storage.mjs\";\r\nimport fetch from \"./fetch.mjs\";\r\nimport notification from \"./notification.mjs\";\r\nexport const log = (...logs) => console.log(logs.join(\"\\n\"));\r\nimport logError from \"./logError.mjs\";\r\nexport const wait = (delay = 1000) => new Promise(resolve => setTimeout(resolve, delay));\r\nimport done from \"./done.mjs\";\r\nexport const getScript = async (url) => await fetch(url).then(response => response.body);\r\nimport runScript from \"./runScript.mjs\";\r\n//import GRPC from \"./GRPC.mjs\";\r\nexport { $platform, URL, _, Storage, fetch, notification, logError, done, runScript };\r\n","import { $platform, URL, _, Storage, fetch, notification, log, logError, wait, done, getScript, runScript } from \"./utils/utils.mjs\";\r\nimport XML from \"./XML/XML.mjs\";\r\nimport VTT from \"./WebVTT/WebVTT.mjs\";\r\nimport Database from \"./database/index.mjs\";\r\nimport setENV from \"./function/setENV.mjs\";\r\nimport detectFormat from \"./function/detectFormat.mjs\";\r\nimport detectPlatform from \"./function/detectPlatform.mjs\";\r\nimport setCache from \"./function/setCache.mjs\";\r\nimport constructSubtitlesQueue from \"./function/constructSubtitlesQueue.mjs\";\r\nimport Composite from \"./class/Composite.mjs\";\r\nlog(\"v1.1.0(1004)\");\r\n/***************** Processing *****************/\r\n// 解构URL\r\nconst url = new URL($request.url);\r\nlog(`⚠ url: ${url.toJSON()}`, \"\");\r\n// 获取连接参数\r\nconst METHOD = $request.method, HOST = url.hostname, PATH = url.pathname, PATHs = url.pathname.split(\"/\").filter(Boolean);\r\nlog(`⚠ METHOD: ${METHOD}, HOST: ${HOST}, PATH: ${PATH}` , \"\");\r\n// 解析格式\r\nlet FORMAT = ($response.headers?.[\"Content-Type\"] ?? $response.headers?.[\"content-type\"])?.split(\";\")?.[0];\r\nif (FORMAT === \"application/octet-stream\" || FORMAT === \"text/plain\") FORMAT = detectFormat(url, $response?.body, FORMAT);\r\nlog(`⚠ FORMAT: ${FORMAT}`, \"\");\r\n(async () => {\r\n\t// 获取平台\r\n\tconst PLATFORM = detectPlatform($request.url);\r\n\tlog(`⚠ PLATFORM: ${PLATFORM}`, \"\");\r\n\t// 读取设置\r\n\tconst { Settings, Caches, Configs } = setENV(\"DualSubs\", [([\"YouTube\", \"Netflix\", \"BiliBili\", \"Spotify\"].includes(PLATFORM)) ? PLATFORM : \"Universal\", \"Composite\", \"API\"], Database);\r\n\tlog(`⚠ Settings.Switch: ${Settings?.Switch}`, \"\");\r\n\tswitch (Settings.Switch) {\r\n\t\tcase true:\r\n\t\tdefault:\r\n\t\t\t// 获取字幕类型与语言\r\n\t\t\tconst Type = url.searchParams?.get(\"subtype\") ?? Settings.Type, Languages = [url.searchParams?.get(\"lang\")?.toUpperCase?.() ?? Settings.Languages[0], (url.searchParams?.get(\"tlang\") ?? Caches?.tlang)?.toUpperCase?.() ?? Settings.Languages[1]];\r\n\t\t\tlog(`⚠ Type: ${Type}, Languages: ${Languages}`, \"\");\r\n\t\t\t// 创建字幕请求队列\r\n\t\t\tlet requests = [];\r\n\t\t\t// 处理类型\r\n\t\t\tswitch (Type) {\r\n\t\t\t\tcase \"Official\":\r\n\t\t\t\t\tlog(`⚠ 官方字幕`, \"\");\r\n\t\t\t\t\tswitch (PLATFORM) {\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t// 获取字幕文件地址vtt缓存（map）\r\n\t\t\t\t\t\t\tconst { subtitlesPlaylistURL } = getSubtitlesCache($request.url, Caches.Playlists.Subtitle, Languages);\r\n\t\t\t\t\t\t\t// 获取字幕播放列表m3u8缓存（map）\r\n\t\t\t\t\t\t\tconst { masterPlaylistURL, subtitlesPlaylistIndex } = getPlaylistCache(subtitlesPlaylistURL, Caches.Playlists.Master, Languages);\r\n\t\t\t\t\t\t\t// 获取字幕文件地址vtt缓存（map）\r\n\t\t\t\t\t\t\tconst { subtitlesURIArray0, subtitlesURIArray1 } = getSubtitlesArray(masterPlaylistURL, subtitlesPlaylistIndex, Caches.Playlists.Master, Caches.Playlists.Subtitle, Languages);\r\n\t\t\t\t\t\t\t// 获取官方字幕请求\r\n\t\t\t\t\t\t\tif (subtitlesURIArray1.length) {\r\n\t\t\t\t\t\t\t\tlog(`🚧 subtitlesURIArray1.length: ${subtitlesURIArray1.length}`, \"\");\r\n\t\t\t\t\t\t\t\t// 获取字幕文件名\r\n\t\t\t\t\t\t\t\tlet fileName = PATHs?.[PATHs?.length - 1] ?? getSubtitlesFileName($request.url, PLATFORM);\r\n\t\t\t\t\t\t\t\tlog(`🚧 fileName: ${fileName}`, \"\")\r\n\t\t\t\t\t\t\t\t// 构造请求队列\r\n\t\t\t\t\t\t\t\trequests = constructSubtitlesQueue($request, fileName, subtitlesURIArray0, subtitlesURIArray1);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"YouTube\":\r\n\t\t\t\t\t\t\tlog(`⚠ YouTube`, \"\");\r\n\t\t\t\t\t\t\tswitch (url.searchParams.get(\"tlang\")) {\r\n\t\t\t\t\t\t\t\tcase undefined:\r\n\t\t\t\t\t\t\t\t\tlog(`⚠ 未选择翻译语言，跳过`, \"\");\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tlog(`⚠ 已选择翻译语言`, \"\");\r\n\t\t\t\t\t\t\t\t\t// 设置参数\r\n\t\t\t\t\t\t\t\t\t// Settings.Offset = 0;\r\n\t\t\t\t\t\t\t\t\tSettings.Tolerance = 100;\r\n\t\t\t\t\t\t\t\t\tSettings.Position = (Settings.Position === \"Reverse\") ? \"Forward\" : \"Reverse\"; // 链接主字幕为翻译字幕，副字幕为原字幕，所以需要翻转一下\r\n\t\t\t\t\t\t\t\t\tswitch (Settings.ShowOnly) {\r\n\t\t\t\t\t\t\t\t\t\tcase true:\r\n\t\t\t\t\t\t\t\t\t\t\tlog(`⚠ 仅显示翻译后字幕，跳过`, \"\");\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase false:\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tlog(`⚠ 生成双语字幕`, \"\");\r\n\t\t\t\t\t\t\t\t\t\t\t// 获取字幕\r\n\t\t\t\t\t\t\t\t\t\t\turl.searchParams.set(\"lang\", Caches.Playlists.Subtitle.get(url.searchParams.get(\"v\")) || url.searchParams.get(\"lang\")); // 主语言\r\n\t\t\t\t\t\t\t\t\t\t\turl.searchParams.delete(\"tlang\") // 原字幕\r\n\t\t\t\t\t\t\t\t\t\t\tlet request = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"url\": url.toString(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"headers\": $request.headers\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\trequests.push(request);\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"Netflix\":\r\n\t\t\t\t\t\t\tlog(`⚠ Netflix`, \"\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"Bilibili\":\r\n\t\t\t\t\t\t\tlog(`⚠ Bilibili`, \"\");\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Translate\":\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlog(`⚠ 翻译字幕`, \"\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"External\":\r\n\t\t\t\t\tlog(`⚠ 外挂字幕`, \"\");\r\n\t\t\t\t\tswitch (Settings.SubVendor) {\r\n\t\t\t\t\t\tcase \"URL\":\r\n\t\t\t\t\t\t\tlet request = {\r\n\t\t\t\t\t\t\t\t\"url\": Settings.URL,\r\n\t\t\t\t\t\t\t\t\"headers\": {\r\n\t\t\t\t\t\t\t\t\t\"Accept\": \"*/*\",\r\n\t\t\t\t\t\t\t\t\t\"User-Agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1 Mobile/15E148 Safari/604.1\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\trequests.push(request);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t};\r\n\t\t\t// 格式判断\r\n\t\t\tswitch (FORMAT) {\r\n\t\t\t\tcase undefined: // 视为无body\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"application/x-www-form-urlencoded\":\r\n\t\t\t\tcase \"text/plain\":\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"application/x-mpegURL\":\r\n\t\t\t\tcase \"application/x-mpegurl\":\r\n\t\t\t\tcase \"application/vnd.apple.mpegurl\":\r\n\t\t\t\tcase \"audio/mpegurl\":\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"text/xml\":\r\n\t\t\t\tcase \"text/html\":\r\n\t\t\t\tcase \"text/plist\":\r\n\t\t\t\tcase \"application/xml\":\r\n\t\t\t\tcase \"application/plist\":\r\n\t\t\t\tcase \"application/x-plist\":\r\n\t\t\t\t\tbody = XML.parse($response.body);\r\n\t\t\t\t\tawait Promise.all(requests.map(async request => {\r\n\t\t\t\t\t\tlet officialSubtitle = await fetch(request).then(response => XML.parse(response.body));\r\n\t\t\t\t\t\tbody = new Composite(Settings).timedText(body, officialSubtitle, url.searchParams.get(\"kind\"));\r\n\t\t\t\t\t}));\r\n\t\t\t\t\t$response.body = XML.stringify(body);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"text/vtt\":\r\n\t\t\t\tcase \"application/vtt\":\r\n\t\t\t\t\tbody = VTT.parse($response.body);\r\n\t\t\t\t\tawait Promise.all(requests.map(async request => {\r\n\t\t\t\t\t\tlet officialSubtitle = await fetch(request).then(response => VTT.parse(response.body));\r\n\t\t\t\t\t\tbody = new Composite(Settings).webVTT(body, officialSubtitle);\r\n\t\t\t\t\t}));\r\n\t\t\t\t\t$response.body = VTT.stringify(body);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"text/json\":\r\n\t\t\t\tcase \"application/json\":\r\n\t\t\t\t\tbody = JSON.parse($response.body ?? \"{}\");\r\n\t\t\t\t\tawait Promise.all(requests.map(async request => {\r\n\t\t\t\t\t\tlet officialSubtitle = await fetch(request).then(response => JSON.parse(response.body));\r\n\t\t\t\t\t\tbody = new Composite(Settings).JSON(body, officialSubtitle, url.searchParams.get(\"kind\"));\r\n\t\t\t\t\t}));\r\n\t\t\t\t\t$response.body = JSON.stringify(body);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"application/protobuf\":\r\n\t\t\t\tcase \"application/x-protobuf\":\r\n\t\t\t\tcase \"application/vnd.google.protobuf\":\r\n\t\t\t\tcase \"application/grpc\":\r\n\t\t\t\tcase \"application/grpc+proto\":\r\n\t\t\t\tcase \"application/octet-stream\":\r\n\t\t\t\t\tbreak;\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase false:\r\n\t\t\tbreak;\r\n\t};\r\n})()\r\n\t.catch((e) => logError(e))\r\n\t.finally(() => done($response))\r\n\r\n/***************** Function *****************/\r\n/**\r\n * Get Playlist Cache\r\n * @author VirgilClyne\r\n * @param {String} url - Request URL / Master Playlist URL\r\n * @param {Map} cache - Playlist Cache\r\n * @param {Array} languages - Languages\r\n * @return {Promise<Object>} { masterPlaylistURL, subtitlesPlaylist, subtitlesPlaylistIndex }\r\n */\r\nfunction getPlaylistCache(url, cache, languages) {\r\n\tlog(`☑️ getPlaylistCache`, \"\");\r\n\tlet masterPlaylistURL = \"\";\r\n\tlet subtitlesPlaylist = {};\r\n\tlet subtitlesPlaylistIndex = 0;\r\n\tcache?.forEach((Value, Key) => {\r\n\t\tlanguages?.forEach(language => {\r\n\t\t\tif (Array.isArray(Value?.[language])) {\r\n\t\t\t\tlet Array = Value?.[language];\r\n\t\t\t\tif (Array?.some((Object, Index) => {\r\n\t\t\t\t\tif (url.includes(Object?.URI || Object?.OPTION?.URI || null)) {\r\n\t\t\t\t\t\tsubtitlesPlaylistIndex = Index;\r\n\t\t\t\t\t\tlog(`🚧 getPlaylistCache`, `subtitlesPlaylistIndex: ${subtitlesPlaylistIndex}`, \"\");\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else return false;\r\n\t\t\t\t})) {\r\n\t\t\t\t\tmasterPlaylistURL = Key;\r\n\t\t\t\t\tsubtitlesPlaylist = Value;\r\n\t\t\t\t\t//log(`🚧 getPlaylistCache`, `masterPlaylistURL: ${masterPlaylistURL}`, `subtitlesPlaylist: ${JSON.stringify(subtitlesPlaylist)}`, \"\");\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t});\r\n\t});\r\n\tlog(`✅ getPlaylistCache`, `masterPlaylistURL: ${JSON.stringify(masterPlaylistURL)}`, \"\");\r\n\treturn { masterPlaylistURL, subtitlesPlaylist, subtitlesPlaylistIndex };\r\n};\r\n\r\n/**\r\n * Get Subtitles Cache\r\n * @author VirgilClyne\r\n * @param {String} url - Request URL / Subtitles URL\r\n * @param {Map} cache - Subtitles Cache\r\n * @param {Array} languages - Languages\r\n * @return {Promise<Object>} { subtitlesPlaylistURL, subtitles, subtitlesIndex }\r\n */\r\nfunction getSubtitlesCache(url, cache, languages) {\r\n\tlog(`☑️ getSubtitlesCache`, \"\");\r\n\tlet subtitlesPlaylistURL = \"\";\r\n\tlet subtitles = [];\r\n\tlet subtitlesIndex = 0;\r\n\tcache?.forEach((Value, Key) => {\r\n\t\tif (Array.isArray(Value)) {\r\n\t\t\tlet Array = Value;\r\n\t\t\tif (Array?.some((String, Index) => {\r\n\t\t\t\tif (url.includes(String || null)) {\r\n\t\t\t\t\tsubtitlesIndex = Index;\r\n\t\t\t\t\tlog(`🚧 getSubtitlesCache`, `subtitlesIndex: ${subtitlesIndex}`, \"\");\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else return false;\r\n\t\t\t})) {\r\n\t\t\t\tsubtitlesPlaylistURL = Key;\r\n\t\t\t\tsubtitles = Value;\r\n\t\t\t\t//log(`🚧 getSubtitlesCache, subtitlesPlaylistURL: ${subtitlesPlaylistURL}`, \"\");\r\n\t\t\t};\r\n\t\t};\r\n\t});\r\n\tlog(`✅ getSubtitlesCache, subtitlesPlaylistURL: ${subtitlesPlaylistURL}`, \"\");\r\n\treturn { subtitlesPlaylistURL, subtitles, subtitlesIndex };\r\n};\r\n\r\n/**\r\n * Get Subtitles Array\r\n * @author VirgilClyne\r\n * @param {String} url - Request URL / Master Playlist URL\r\n * @param {Number} index - Subtitles Playlist Index\r\n * @param {Map} playlistsCache - Playlists Cache\r\n * @param {Map} subtitlesCache - Subtitles Cache\r\n * @param {Array} languages - Languages\r\n * @return {Promise<Object>} { subtitlesURIArray0, subtitlesURIArray1 }\r\n */\r\nfunction getSubtitlesArray(url, index, playlistsCache, subtitlesCache, languages) {\r\n\tlog(`☑️ getSubtitlesArray`, \"\");\r\n\tconst subtitlesPlaylistValue = playlistsCache?.get(url) || {};\r\n\tlet subtitlesPlaylistURL0 = subtitlesPlaylistValue?.[languages[0]]?.[index]?.URL || subtitlesPlaylistValue?.[languages[0]]?.[0]?.URL;\r\n\tlet subtitlesPlaylistURL1 = subtitlesPlaylistValue?.[languages[1]]?.[index]?.URL || subtitlesPlaylistValue?.[languages[1]]?.[0]?.URL;\r\n\tlog(`🚧 getSubtitlesArray`, `subtitlesPlaylistURL0: ${subtitlesPlaylistURL0}, subtitlesPlaylistURL1: ${subtitlesPlaylistURL1}`, \"\");\r\n\t// 查找字幕文件地址vtt缓存（map）\r\n\tlet subtitlesURIArray0 = subtitlesCache.get(subtitlesPlaylistURL0) || [];\r\n\tlet subtitlesURIArray1 = subtitlesCache.get(subtitlesPlaylistURL1) || [];\r\n\t//log(`🚧 getSubtitlesArray`, `subtitlesURIArray0: ${JSON.stringify(subtitlesURIArray0)}, subtitlesURIArray1: ${JSON.stringify(subtitlesURIArray1)}`, \"\");\r\n\tlog(`✅ getSubtitlesArray`, \"\");\r\n\treturn { subtitlesURIArray0, subtitlesURIArray1 };\r\n};\r\n\r\n/**\r\n * Get Subtitles FileName\r\n * @author VirgilClyne\r\n * @param {String} url - Request URL / Subtitles URL\r\n * @param {String} platform - Platform Name\r\n * @return {String<*>} fileName\r\n */\r\nfunction getSubtitlesFileName(url, platform) {\r\n\tlog(`☑️ Get Subtitles FileName`, `url: ${url}`, \"\");\r\n\tlet fileName = undefined;\r\n\tswitch (platform) {\r\n\t\tcase \"Apple\":\r\n\t\t\tfileName = request.url.match(/.+_(subtitles(_V\\d)?-\\d+\\.webvtt)\\?(.*)subtype=/)[1]; // Apple 片段分型序号不同\r\n\t\t\tbreak;\r\n\t\tcase \"Disney+\":\r\n\t\t\tfileName = request.url.match(/([^\\/]+\\.vtt)\\?(.*)subtype=/)[1]; // Disney+ 片段名称相同\r\n\t\t\tbreak;\r\n\t\tcase \"Hulu\":\r\n\t\t\tfileName = request.url.match(/.+_(SEGMENT\\d+_.+\\.vtt)\\?(.*)subtype=/)[1]; // Hulu 片段分型序号相同\r\n\t\t\tbreak;\r\n\t\tcase \"PrimeVideo\":\r\n\t\tcase \"HBOMax\":\r\n\t\tdefault:\r\n\t\t\tfileName = null; // Amazon Prime Video HBO_Max不拆分字幕片段\r\n\t\t\tbreak;\r\n\t};\r\n\tlog(`✅ Get Subtitles FileName`, `fileName: ${fileName}`, \"\");\r\n\treturn fileName;\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACe;AACf;AACA;AACA,4CAA4C,WAAW,GAAG,aAAa;AACvE;AACA,4CAA4C,sEAAsE;AAClH;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2BAA2B,WAAW,qCAAqC,cAAc,sEAAsE;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mDAAmD,EAAE,aAAa,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,UAAU;AACvI;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;ACzEA;AACA;AACe;AACf;AACA;AACA,4CAA4C,WAAW,GAAG,aAAa;AACvE;AACA;AACA;AACA;AACA,QAAQ;AACR,OAAO;AACP,OAAO;AACP,SAAS;AACT,SAAS;AACT;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,oCAAoC;AACpC,iCAAiC;AACjC;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,IAAI,cAAc,IAAI,GAAG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;AACA;;;;;;;;;;ACjFyC;AACzC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACe;AACf,CAAC,qDAAG,iCAAiC,4EAA4E;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C,0DAA0D,0BAA0B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qDAAG,8BAA8B,OAAO;AACzC;AACA;;;;;;;;;;AC9EyC;AACzC;AACe;AACf,CAAC,qDAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAG,mCAAmC,SAAS;AACnD;AACA;;;;;;;;;;AC3ByC;AACzC;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACe;AACf,CAAC,qDAAG,iCAAiC,UAAU;AAC/C,kCAAkC;AAClC,kCAAkC;AAClC,CAAC,qDAAG;AACJ;AACA;;;;;;;;;;;ACfgD;AACJ;AAC5C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACe;AACf,CAAC,qDAAG;AACJ,OAAO,4BAA4B,EAAE,iEAAU;AAC/C;AACA,iGAAiG;AACjG,CAAC,qDAAG,6CAA6C,gBAAgB,oBAAoB,yBAAyB;AAC9G;AACA,iDAAiD,cAAc,kBAAkB,uBAAuB;AACxG,uGAAuG;AACvG,mFAAmF;AACnF,uFAAuF;AACvF,+GAA+G;AAC/G,uGAAuG;AACvG,sIAAsI;AACtI;AACA,UAAU;AACV;;;;;;;;;AC3BA;AACe;AACf;AACA;AACA,kBAAkB,6BAA6B,WAAW,GAAG,aAAa;AAC1E;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,GAAG;AACH;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,aAAa;AACb,aAAa;AACb,eAAe;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR,QAAQ;AACR,UAAU;AACV,SAAS;AACT;AACA,8BAA8B,KAAK,KAAK,OAAO,MAAM;AACrD;AACA;AACA;;;;;;;;;;ACrEgD;AAChD;AACe;AACf;AACA;AACA,mBAAmB,OAAO,+CAAG,aAAa,WAAW,GAAG,aAAa;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,gBAAgB,IAAI,IAAI,KAAK;AAC7B;AACA,wCAAwC;AACxC,gBAAgB,sBAAsB;AACtC;AACA,gBAAgB,sBAAsB;AACtC,eAAe,6CAAK;AACpB,gBAAgB,yBAAyB;AACzC;AACA;AACA,MAAM;AACN;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,gBAAgB,IAAI,IAAI,KAAK;AAC7B;AACA,wCAAwC;AACxC,gBAAgB,sBAAsB;AACtC;AACA,gBAAgB,sBAAsB;AACtC,IAAI,6CAAK;AACT,gBAAgB,sBAAsB;AACtC;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB;AACA;AACA;AACA,eAAe,+CAAO;AACtB;AACA;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iDAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3Ne;AACf;AACA;AACA;AACA,wBAAwB,MAAM,GAAG,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,KAAK,IAAI,MAAM;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wBAAwB,SAAS;AAC7C;;;;;;;;;;AC/DgD;AAChD;AACe,yBAAyB;AACxC,YAAY,iDAAS;AACrB;AACA,+BAA+B,6CAAK;AACpC,YAAY,+CAAG,gCAAgC,mDAAmD;AAClG;AACA;AACA;AACA;AACA,YAAY,+CAAG,gCAAgC,yCAAyC;AACxF;AACA;AACA;AACA,+BAA+B,6CAAK;AACpC,YAAY,+CAAG,gCAAgC,yCAAyC;AACxF;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA;AACA;AACA,+BAA+B,6CAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd,YAAY,+CAAG;AACf;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA;AACA;AACA;;;;;;;;;;;AC7D2C;AACD;AAC3B,kCAAkC,kBAAkB;AACnE;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAS;AACjC;AACA;AACA;AACA;AACA,wBAAwB,6CAAK;AAC7B;AACA;AACA,wBAAwB,6CAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,gCAAgC,6CAAK;AACrC,+DAA+D,6CAAK;AACpE;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,YAAY,4DAAU;AACtB,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;;;;;;;;;ACnI8C;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,UAAU;AACtB;AACe;AACf;AACA;AACA;AACA;AACA,gBAAgB,uDAAe;AAC/B,wEAAwE,aAAa,mBAAmB,sBAAsB;AAC9H;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAAK;AACvC;AACA;AACA,wCAAwC,6CAAK;AAC7C;AACA;AACA;AACA;AACA,0EAA0E,gBAAgB,sBAAsB,yBAAyB;AACzI;AACA,oBAAoB,2CAA2C,2CAA2C;AAC1G;AACA,wEAAwE,aAAa,mBAAmB,sBAAsB;AAC9H;AACA,2BAA2B;AAC3B,0BAA0B;AAC1B;AACA,yBAAyB;AACzB;AACA,iFAAiF,sBAAsB,sBAAsB,+BAA+B;AAC5J;AACA,oDAAoD,IAAI,IAAI,aAAa,MAAM,IAAI,IAAI,sBAAsB;AAC7G,8EAA8E;AAC9E;AACA,gGAAgG;AAChG,+CAA+C;AAC/C;AACA;AACA,KAAK;AACL,iEAAiE,oBAAoB,mBAAmB,sBAAsB;AAC9H;AACA;AACA,oCAAoC,mBAAmB,cAAc,6EAA6E;AAClJ,qCAAqC,6DAA6D;AAClG;;;;;;;;;ACzDe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACV6C;AAC9B;AACf,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAG;AACf;AACA;AACA,YAAY,gDAAG;AACf;AACA;AACA;;;;;;;;;;AChB6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oHAAoH;AACtJ,kCAAkC,0HAA0H;AAC5J;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd;AACA;AACe;AACf,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+CAAG;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAS;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,wBAAwB,iDAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrFO;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACX0D;AAC1D;AACe;AACf,kBAAkB,uDAAe;AACjC;AACA,0BAA0B,uDAAe;AACzC;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,oCAAoC;AACvD;AACA;AACA,UAAU,iDAAK,mDAAmD,oDAAQ;AAC1E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB2C;AACf;AACC;AACO;AACJ;AACc;AACvC;AAC+B;AAC/B;AACuB;AACvB,uCAAuC,sDAAK;AACX;AACxC;AACsF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb+C;AACrG;AACM;AACM;AACD;AACY;AACI;AACZ;AAC8B;AAC/B;AAC9C,qDAAG;AACH;AACA;AACA,gBAAgB,iDAAG;AACnB,qDAAG,aAAa,aAAa;AAC7B;AACA;AACA,qDAAG,gBAAgB,OAAO,UAAU,KAAK,UAAU,KAAK;AACxD;AACA,mGAAmG;AACnG,+EAA+E,sEAAY;AAC3F,qDAAG,gBAAgB,OAAO;AAC1B;AACA;AACA,kBAAkB,wEAAc;AAChC,CAAC,qDAAG,kBAAkB,SAAS;AAC/B;AACA,SAAS,4BAA4B,EAAE,gEAAM,gIAAgI,2DAAQ;AACrL,CAAC,qDAAG,yBAAyB,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,GAAG,qDAAG,cAAc,KAAK,eAAe,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA,KAAK,qDAAG;AACR;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA,eAAe,4CAA4C;AAC3D;AACA,eAAe,yCAAyC;AACxD;AACA;AACA,QAAQ,qDAAG,oCAAoC,0BAA0B;AACzE;AACA;AACA,QAAQ,qDAAG,mBAAmB,SAAS;AACvC;AACA,mBAAmB,iFAAuB;AAC1C;AACA;AACA;AACA,OAAO,qDAAG;AACV;AACA;AACA,SAAS,qDAAG;AACZ;AACA;AACA,SAAS,qDAAG;AACZ;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA,WAAW,qDAAG;AACd;AACA;AACA;AACA,WAAW,qDAAG;AACd;AACA,mIAAmI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,qDAAG;AACV;AACA;AACA,OAAO,qDAAG;AACV;AACA;AACA;AACA;AACA;AACA,KAAK,qDAAG;AACR;AACA;AACA,KAAK,qDAAG;AACR;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAS;AACrB;AACA,mCAAmC,uDAAK,2BAA2B,0DAAS;AAC5E,iBAAiB,4DAAS;AAC1B,MAAM;AACN,sBAAsB,8DAAa;AACnC;AACA;AACA;AACA,YAAY,gEAAS;AACrB;AACA,mCAAmC,uDAAK,2BAA2B,gEAAS;AAC5E,iBAAiB,4DAAS;AAC1B,MAAM;AACN,sBAAsB,oEAAa;AACnC;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,mCAAmC,uDAAK;AACxC,iBAAiB,4DAAS;AAC1B,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,0DAAQ;AACvB,gBAAgB,sDAAI;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA,CAAC,sDAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qDAAG,qDAAqD,uBAAuB;AACrF;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,0DAA0D,kBAAkB,yBAAyB,kCAAkC;AACvI;AACA;AACA,GAAG;AACH,EAAE;AACF,CAAC,qDAAG,+CAA+C,kCAAkC;AACrF,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA,CAAC,qDAAG;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,qDAAG,8CAA8C,eAAe;AACrE;AACA,MAAM;AACN,IAAI;AACJ;AACA;AACA,2DAA2D,qBAAqB;AAChF;AACA;AACA,EAAE;AACF,CAAC,qDAAG,iDAAiD,qBAAqB;AAC1E,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA,CAAC,qDAAG;AACJ;AACA;AACA;AACA,CAAC,qDAAG,qDAAqD,sBAAsB,2BAA2B,sBAAsB;AAChI;AACA;AACA;AACA,wDAAwD,mCAAmC,wBAAwB,mCAAmC;AACtJ,CAAC,qDAAG;AACJ,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,WAAW;AACvB;AACA;AACA,CAAC,qDAAG,0CAA0C,IAAI;AAClD;AACA;AACA;AACA,uFAAuF;AACvF;AACA;AACA,mEAAmE;AACnE;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,CAAC,qDAAG,4CAA4C,SAAS;AACzD;AACA"}